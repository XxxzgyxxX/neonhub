--[[
╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                      ║
║  ███╗   ██╗███████╗ ██████╗ ███╗   ██╗    ██╗  ██╗██╗   ██╗██████╗                                                 ║
║  ████╗  ██║██╔════╝██╔═══██╗████╗  ██║    ██║  ██║██║   ██║██╔══██╗                                                ║
║  ██╔██╗ ██║█████╗  ██║   ██║██╔██╗ ██║    ███████║██║   ██║██████╔╝                                                ║
║  ██║╚██╗██║██╔══╝  ██║   ██║██║╚██╗██║    ██╔══██║██║   ██║██╔══██╗                                                ║
║  ██║ ╚████║███████╗╚██████╔╝██║ ╚████║    ██║  ██║╚██████╔╝██████╔╝                                                ║
║  ╚═╝  ╚═══╝╚══════╝ ╚═════╝ ╚═╝  ╚═══╝    ╚═╝  ╚═╝ ╚═════╝ ╚═════╝                                                 ║
║                                                                                                                      ║
║  ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────┐  ║
║  │                                      🌟 GROW A GARDEN SCRIPT 🌟                                               │  ║
║  │                                            By XzgyX                                                           │  ║
║  │                                    Professional Edition v2.0                                                 │  ║
║  │                                                                                                              │  ║
║  │  ✅ Auto Farm Complete System     ✅ Teleport System        ✅ Player Modifications                          │  ║
║  │  ✅ Auto Plant & Harvest         ✅ ESP & Visual Effects    ✅ FPS Boost & Optimization                      │  ║
║  │  ✅ Auto Water & Sell            ✅ Anti-AFK System         ✅ Server Management                             │  ║
║  │  ✅ Auto Buy Seeds & Tools       ✅ Statistics Monitor      ✅ Professional UI                              │  ║
║  │  ✅ Auto Egg System              ✅ Customizable Settings   ✅ Error Handling                               │  ║
║  └──────────────────────────────────────────────────────────────────────────────────────────────────────────────┘  ║
║                                                                                                                      ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
]]

-- ========================================
-- SERVIÇOS E CONFIGURAÇÕES INICIAIS
-- ========================================

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- ========================================
-- CONFIGURAÇÕES GLOBAIS
-- ========================================

local NeonHub = {
    Author = "XzgyX",
    Version = "2.0",
    GameName = "Grow a Garden",
    Settings = {
        AutoFarm = {
            Enabled = false,
            PlantType = "Carrot",
            AutoPlant = false,
            AutoWater = false,
            AutoHarvest = false,
            AutoSell = false,
            AutoCollectDrops = false,
            PlantDelay = 0.5,
            WaterDelay = 0.5,
            HarvestDelay = 0.5,
            SellDelay = 0.5
        },
        AutoBuy = {
            AutoBuySeeds = false,
            AutoBuyTools = false,
            AutoUpgradeTools = false,
            BuyDelay = 1
        },
        AutoEgg = {
            Enabled = false,
            EggType = "Common",
            EggAmount = 1,
            EggDelay = 1
        },
        Player = {
            WalkSpeed = 16,
            JumpPower = 50,
            InfiniteJump = false,
            NoClip = false,
            Fly = false,
            FlySpeed = 50
        },
        Visual = {
            ESP = false,
            FullBright = false,
            UIScale = 1.0,
            UITransparency = 0.1
        },
        Performance = {
            FPSBoost = false,
            LowGraphics = false,
            AntiAFK = false
        },
        Server = {
            AutoRejoin = false,
            ServerHop = false,
            FindEmptyServer = false
        },
        Teleport = {
            TeleportSpeed = 1,
            SmartTeleport = false
        }
    }
}

-- ========================================
-- CACHE E OTIMIZAÇÕES
-- ========================================

local Cache = {
    RemoteEvents = {},
    RemoteFunctions = {},
    Plants = {},
    Tools = {},
    Eggs = {},
    Shops = {},
    LastUpdate = 0,
    UpdateInterval = 1
}

-- ========================================
-- FUNÇÕES UTILITÁRIAS
-- ========================================

local function SendNotification(title, text, duration)
    duration = duration or 5
    StarterGui:SetCore("SendNotification", {
        Title = "🌟 " .. title;
        Text = text;
        Duration = duration;
        Icon = "rbxassetid://6023426923";
    })
end

local function SafeCall(func, ...)
    local success, result = pcall(func, ...)
    if not success then
        warn("Neon Hub Error: " .. tostring(result))
    end
    return success, result
end

local function GetRemoteEvent(name)
    if not Cache.RemoteEvents[name] then
        local remote = ReplicatedStorage:FindFirstChild(name, true)
        if remote and remote:IsA("RemoteEvent") then
            Cache.RemoteEvents[name] = remote
        end
    end
    return Cache.RemoteEvents[name]
end

local function GetRemoteFunction(name)
    if not Cache.RemoteFunctions[name] then
        local remote = ReplicatedStorage:FindFirstChild(name, true)
        if remote and remote:IsA("RemoteFunction") then
            Cache.RemoteFunctions[name] = remote
        end
    end
    return Cache.RemoteFunctions[name]
end

local function FireRemote(remoteName, ...)
    local remote = GetRemoteEvent(remoteName)
    if remote then
        SafeCall(function()
            remote:FireServer(...)
        end)
    end
end

local function InvokeRemote(remoteName, ...)
    local remote = GetRemoteFunction(remoteName)
    if remote then
        return SafeCall(function()
            return remote:InvokeServer(...)
        end)
    end
end

-- ========================================
-- SISTEMA DE TELEPORTE
-- ========================================

local TeleportLocations = {
    Spawn = Vector3.new(0, 5, 0),
    Farm = Vector3.new(100, 5, 100),
    Shop1 = Vector3.new(-50, 5, 50),
    Shop2 = Vector3.new(50, 5, -50),
    Shop3 = Vector3.new(-100, 5, -100),
    SellArea = Vector3.new(200, 5, 200),
    VIPArea = Vector3.new(-200, 5, -200),
    SecretArea = Vector3.new(0, 5, 500)
}

local function TeleportTo(position)
    if not RootPart then return end
    
    local speed = NeonHub.Settings.Teleport.TeleportSpeed
    
    if speed <= 0.1 then
        RootPart.CFrame = CFrame.new(position)
    else
        local tween = TweenService:Create(RootPart, 
            TweenInfo.new(speed, Enum.EasingStyle.Linear), 
            {CFrame = CFrame.new(position)}
        )
        tween:Play()
    end
end

-- ========================================
-- SISTEMA DE FARMING
-- ========================================

local function FindPlants()
    local plants = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:lower():find("plant") or obj.Name:lower():find("crop") then
            table.insert(plants, obj)
        end
    end
    return plants
end

local function GetPlantState(plant)
    if not plant then return "unknown" end
    
    -- Lógica para determinar o estado da planta
    if plant:FindFirstChild("Ready") then
        return "ready"
    elseif plant:FindFirstChild("Growing") then
        return "growing"
    elseif plant:FindFirstChild("NeedsWater") then
        return "needswater"
    else
        return "empty"
    end
end

local function PlantSeed(position, seedType)
    FireRemote("PlantSeed", position, seedType or NeonHub.Settings.AutoFarm.PlantType)
end

local function WaterPlant(plant)
    if plant then
        FireRemote("WaterPlant", plant)
    end
end

local function HarvestPlant(plant)
    if plant then
        FireRemote("HarvestPlant", plant)
    end
end

local function SellItems()
    FireRemote("SellItems")
end

local function CollectDrops()
    for _, drop in pairs(Workspace:GetChildren()) do
        if drop.Name:lower():find("drop") or drop.Name:lower():find("coin") then
            if drop:FindFirstChild("Humanoid") then
                drop.Humanoid:MoveTo(RootPart.Position)
            end
        end
    end
end

-- ========================================
-- SISTEMA DE LOJA
-- ========================================

local function GetShopItems()
    local success, items = InvokeRemote("GetShopItems")
    if success then
        return items
    end
    return {}
end

local function BuyItem(itemName, quantity)
    FireRemote("BuyItem", itemName, quantity or 1)
end

local function BuySeeds()
    local seedType = NeonHub.Settings.AutoFarm.PlantType
    BuyItem(seedType .. " Seeds", 10)
end

local function BuyTools()
    local tools = {"Watering Can", "Shovel", "Fertilizer"}
    for _, tool in pairs(tools) do
        BuyItem(tool, 1)
    end
end

local function UpgradeTools()
    FireRemote("UpgradeTools")
end

-- ========================================
-- SISTEMA DE OVOS
-- ========================================

local function OpenEgg(eggType, amount)
    FireRemote("OpenEgg", eggType, amount)
end

-- ========================================
-- SISTEMA DE MODIFICAÇÕES DO JOGADOR
-- ========================================

local function UpdatePlayerStats()
    if Humanoid then
        Humanoid.WalkSpeed = NeonHub.Settings.Player.WalkSpeed
        Humanoid.JumpPower = NeonHub.Settings.Player.JumpPower
    end
end

local function ToggleInfiniteJump()
    if NeonHub.Settings.Player.InfiniteJump then
        UserInputService.JumpRequest:Connect(function()
            if Humanoid then
                Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

local function ToggleNoClip()
    if NeonHub.Settings.Player.NoClip then
        RunService.Stepped:Connect(function()
            for _, part in pairs(Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
end

local function ToggleFly()
    if NeonHub.Settings.Player.Fly then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = RootPart
        
        local flying = true
        UserInputService.InputBegan:Connect(function(input)
            if flying then
                if input.KeyCode == Enum.KeyCode.W then
                    bodyVelocity.Velocity = bodyVelocity.Velocity + (Workspace.CurrentCamera.CFrame.LookVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.S then
                    bodyVelocity.Velocity = bodyVelocity.Velocity - (Workspace.CurrentCamera.CFrame.LookVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.A then
                    bodyVelocity.Velocity = bodyVelocity.Velocity - (Workspace.CurrentCamera.CFrame.RightVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.D then
                    bodyVelocity.Velocity = bodyVelocity.Velocity + (Workspace.CurrentCamera.CFrame.RightVector * NeonHub.Settings.Player.FlySpeed)
                end
            end
        end)
    end
end

-- ========================================
-- SISTEMA VISUAL E ESP
-- ========================================

local function CreateESP()
    if not NeonHub.Settings.Visual.ESP then return end
    
    for _, plant in pairs(FindPlants()) do
        if plant:FindFirstChild("ESP") then continue end
        
        local esp = Instance.new("BillboardGui")
        esp.Name = "ESP"
        esp.Size = UDim2.new(0, 100, 0, 50)
        esp.StudsOffset = Vector3.new(0, 3, 0)
        esp.Parent = plant
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 0.5
        frame.Parent = esp
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextScaled = true
        label.Font = Enum.Font.SourceSansBold
        label.Text = GetPlantState(plant)
        label.Parent = frame
        
        local state = GetPlantState(plant)
        if state == "ready" then
            frame.BackgroundColor3 = Color3.new(0, 1, 0)
        elseif state == "needswater" then
            frame.BackgroundColor3 = Color3.new(0, 0, 1)
        else
            frame.BackgroundColor3 = Color3.new(1, 1, 0)
        end
    end
end

local function ToggleFullBright()
    if NeonHub.Settings.Visual.FullBright then
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = false
        Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    else
        Lighting.Brightness = 1
        Lighting.ClockTime = 12
        Lighting.FogEnd = 100
        Lighting.GlobalShadows = true
        Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
    end
end

-- ========================================
-- SISTEMA DE PERFORMANCE
-- ========================================

local function ApplyFPSBoost()
    if not NeonHub.Settings.Performance.FPSBoost then return end
    
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Material = Enum.Material.Plastic
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastRadius = 1
            v.BlastPressure = 1
        end
    end
    
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    settings().Rendering.QualityLevel = 1
end

local function ToggleAntiAFK()
    if NeonHub.Settings.Performance.AntiAFK then
        spawn(function()
            while NeonHub.Settings.Performance.AntiAFK do
                wait(60)
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end
        end)
    end
end

-- ========================================
-- SISTEMA DE ESTATÍSTICAS
-- ========================================

local Stats = {
    FPS = 0,
    Ping = 0,
    Players = 0,
    Memory = 0,
    Runtime = 0
}

local function UpdateStats()
    Stats.FPS = math.floor(1 / RunService.Heartbeat:Wait())
    Stats.Ping = Player:GetNetworkPing() * 1000
    Stats.Players = #Players:GetPlayers()
    Stats.Memory = math.floor(game:GetService("Stats"):GetTotalMemoryUsageMb())
    Stats.Runtime = math.floor(tick() - (game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000))
end

-- ========================================
-- SISTEMA DE SERVIDOR
-- ========================================

local function ServerHop()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data) do
        if server.playing ~= server.maxPlayers then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
    end
end

local function FindEmptyServer()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data) do
        if server.playing < 5 then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[1])
    end
end

local function AutoRejoin()
    game:GetService("GuiService").ErrorMessageChanged:Connect(function()
        if NeonHub.Settings.Server.AutoRejoin then
            TeleportService:Teleport(game.PlaceId)
        end
    end)
end

-- ========================================
-- LOOP PRINCIPAL DO FARMING
-- ========================================

local function AutoFarmLoop()
    spawn(function()
        while true do
            wait(0.1)
            if not NeonHub.Settings.AutoFarm.Enabled then continue end
            local plants = FindPlants()
            for _, plant in pairs(plants) do
                if not plant or not plant.Parent then continue end
                local state = GetPlantState(plant)
                -- Auto Harvest
                if NeonHub.Settings.AutoFarm.AutoHarvest and state == "ready" then
                    HarvestPlant(plant)
                    wait(NeonHub.Settings.AutoFarm.HarvestDelay)
                end
                -- Auto Water
                if NeonHub.Settings.AutoFarm.AutoWater and state == "needswater" then
                    WaterPlant(plant)
                    wait(NeonHub.Settings.AutoFarm.WaterDelay)
                end
                -- Auto Plant
                if NeonHub.Settings.AutoFarm.AutoPlant and state == "empty" then
                    PlantSeed(plant.Position, NeonHub.Settings.AutoFarm.PlantType)
                    wait(NeonHub.Settings.AutoFarm.PlantDelay)
                end
            end
            -- Auto Sell
            if NeonHub.Settings.AutoFarm.AutoSell then
                SellItems()
                wait(NeonHub.Settings.AutoFarm.SellDelay)
            end
            -- Auto Collect Drops
            if NeonHub.Settings.AutoFarm.AutoCollectDrops then
                CollectDrops()
            end
            -- Auto Buy Seeds
            if NeonHub.Settings.AutoBuy.AutoBuySeeds then
                BuySeeds()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            -- Auto Buy Tools
            if NeonHub.Settings.AutoBuy.AutoBuyTools then
                BuyTools()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            -- Auto Upgrade Tools
            if NeonHub.Settings.AutoBuy.AutoUpgradeTools then
                UpgradeTools()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            -- Auto Egg
            if NeonHub.Settings.AutoEgg.Enabled then
                OpenEgg(NeonHub.Settings.AutoEgg.EggType, NeonHub.Settings.AutoEgg.EggAmount)
                wait(NeonHub.Settings.AutoEgg.EggDelay)
            end
        end
    end)
end

-- ========================================
-- CARREGAMENTO DA UI RAYFIELD
-- ========================================

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "🌟 Neon Hub | Grow a Garden",
    LoadingTitle = "Carregando Neon Hub...",
    LoadingSubtitle = "by XzgyX",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "NeonHub",
        FileName = "GrowAGarden"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false
})

-- ========================================
-- ABAS DA INTERFACE
-- ========================================

local HomeTab = Window:CreateTab("🏠 Home", 4483362458)
local FarmTab = Window:CreateTab("🌱 Auto Farm", 4483362458)
local ShopTab = Window:CreateTab("🛒 Auto Shop", 4483362458)
local EggTab = Window:CreateTab("🥚 Auto Egg", 4483362458)
local TeleportTab = Window:CreateTab("🚀 Teleport", 4483362458)
local PlayerTab = Window:CreateTab("👤 Player", 4483362458)
local VisualTab = Window:CreateTab("👁️ Visual", 4483362458)
local PerformanceTab = Window:CreateTab("⚡ Performance", 4483362458)
local ServerTab = Window:CreateTab("🌐 Server", 4483362458)
local SettingsTab = Window:CreateTab("⚙️ Settings", 4483362458)

-- ========================================
-- HOME TAB
-- ========================================

HomeTab:CreateLabel("🌟 Bem-vindo ao Neon Hub Professional!")
HomeTab:CreateLabel("📊 Estatísticas em Tempo Real:")

local StatsLabel = HomeTab:CreateLabel("Carregando estatísticas...")

spawn(function()
    while true do
        wait(1)
        UpdateStats()
        StatsLabel:Set(string.format(
            "🎯 FPS: %d | 📡 Ping: %dms | 👥 Players: %d | 💾 Memory: %dMB",
            Stats.FPS, Stats.Ping, Stats.Players, Stats.Memory
        ))
    end
end)

HomeTab:CreateLabel("🎮 Funcionalidades Disponíveis:")
HomeTab:CreateLabel("✅ Sistema de Farming Completo")
HomeTab:CreateLabel("✅ Auto Compra e Vendas")
HomeTab:CreateLabel("✅ Sistema de Ovos Automático")
HomeTab:CreateLabel("✅ Teleportes Avançados")
HomeTab:CreateLabel("✅ Modificações de Jogador")
HomeTab:CreateLabel("✅ ESP e Efeitos Visuais")
HomeTab:CreateLabel("✅ Otimizações de Performance")
HomeTab:CreateLabel("✅ Gerenciamento de Servidor")

-- ========================================
-- AUTO FARM TAB
-- ========================================

FarmTab:CreateToggle({
    Name = "🌱 Auto Farm Master",
    CurrentValue = false,
    Flag = "AutoFarmMaster",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.Enabled = Value
        if Value then
            SendNotification("Auto Farm", "Sistema ativado!")
            AutoFarmLoop()
        else
            SendNotification("Auto Farm", "Sistema desativado!")
        end
    end
})

FarmTab:CreateDropdown({
    Name = "🌿 Tipo de Planta",
    Options = {"Carrot", "Tomato", "Corn", "Wheat", "Potato", "Beet", "Pumpkin"},
    CurrentOption = "Carrot",
    Flag = "PlantType",
    Callback = function(Option)
        NeonHub.Settings.AutoFarm.PlantType = Option
        SendNotification("Auto Farm", "Planta selecionada: " .. Option)
    end
})

FarmTab:CreateToggle({
    Name = "🌱 Auto Plant",
    CurrentValue = false,
    Flag = "AutoPlant",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.AutoPlant = Value
    end
})

FarmTab:CreateToggle({
    Name = "💧 Auto Water",
    CurrentValue = false,
    Flag = "AutoWater",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.AutoWater = Value
    end
})

FarmTab:CreateToggle({
    Name = "🌾 Auto Harvest",
    CurrentValue = false,
    Flag = "AutoHarvest",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.AutoHarvest = Value
    end
})

FarmTab:CreateToggle({
    Name = "💰 Auto Sell",
    CurrentValue = false,
    Flag = "AutoSell",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.AutoSell = Value
    end
})

FarmTab:CreateToggle({
    Name = "💎 Auto Collect Drops",
    CurrentValue = false,
    Flag = "AutoCollectDrops",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.AutoCollectDrops = Value
    end
})

FarmTab:CreateSlider({
    Name = "⏱️ Plant Delay",
    Range = {0.1, 5},
    Increment = 0.1,
    CurrentValue = 0.5,
    Flag = "PlantDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.PlantDelay = Value
    end
})

FarmTab:CreateSlider({
    Name = "⏱️ Water Delay",
    Range = {0.1, 5},
    Increment = 0.1,
    CurrentValue = 0.5,
    Flag = "WaterDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.WaterDelay = Value
    end
})

FarmTab:CreateSlider({
    Name = "⏱️ Harvest Delay",
    Range = {0.1, 5},
    Increment = 0.1,
    CurrentValue = 0.5,
    Flag = "HarvestDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.HarvestDelay = Value
    end
})

FarmTab:CreateSlider({
    Name = "⏱️ Sell Delay",
    Range = {0.1, 5},
    Increment = 0.1,
    CurrentValue = 0.5,
    Flag = "SellDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoFarm.SellDelay = Value
    end
})

-- ========================================
-- AUTO SHOP TAB
-- ========================================

ShopTab:CreateLabel("🛒 Sistema de Compras Automáticas")

ShopTab:CreateToggle({
    Name = "Auto Buy Seeds",
    CurrentValue = false,
    Flag = "AutoBuySeeds",
    Callback = function(Value)
        NeonHub.Settings.AutoBuy.AutoBuySeeds = Value
        if Value then
            SendNotification("Auto Shop", "Compra automática de sementes ativada!")
        else
            SendNotification("Auto Shop", "Compra automática de sementes desativada!")
        end
    end
})

ShopTab:CreateToggle({
    Name = "Auto Buy Tools",
    CurrentValue = false,
    Flag = "AutoBuyTools",
    Callback = function(Value)
        NeonHub.Settings.AutoBuy.AutoBuyTools = Value
        if Value then
            SendNotification("Auto Shop", "Compra automática de ferramentas ativada!")
        else
            SendNotification("Auto Shop", "Compra automática de ferramentas desativada!")
        end
    end
})

ShopTab:CreateToggle({
    Name = "Auto Upgrade Tools",
    CurrentValue = false,
    Flag = "AutoUpgradeTools",
    Callback = function(Value)
        NeonHub.Settings.AutoBuy.AutoUpgradeTools = Value
        if Value then
            SendNotification("Auto Shop", "Upgrade de ferramentas automático ativado!")
        else
            SendNotification("Auto Shop", "Upgrade de ferramentas automático desativado!")
        end
    end
})

ShopTab:CreateSlider({
    Name = "Compra Delay",
    Range = {0.5, 5},
    Increment = 0.1,
    CurrentValue = 1,
    Flag = "BuyDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoBuy.BuyDelay = Value
    end
})

-- ========================================
-- AUTO EGG TAB
-- ========================================

AutoEggTab:CreateToggle({
    Name = "Ativar Auto Egg",
    CurrentValue = false,
    Flag = "AutoEgg",
    Callback = function(Value)
        NeonHub.Settings.AutoEgg.Enabled = Value
        if Value then
            SendNotification("Auto Egg", "Sistema de ovos ativado!")
        else
            SendNotification("Auto Egg", "Sistema de ovos desativado!")
        end
    end
})

AutoEggTab:CreateDropdown({
    Name = "Tipo de Ovo",
    Options = {"Common", "Rare", "Epic", "Legendary"},
    CurrentOption = "Common",
    Flag = "EggType",
    Callback = function(Option)
        NeonHub.Settings.AutoEgg.EggType = Option
    end
})

AutoEggTab:CreateSlider({
    Name = "Quantidade de Ovos",
    Range = {1, 10},
    Increment = 1,
    CurrentValue = 1,
    Flag = "EggAmount",
    Callback = function(Value)
        NeonHub.Settings.AutoEgg.EggAmount = Value
    end
})

AutoEggTab:CreateSlider({
    Name = "Delay entre ovos",
    Range = {0.5, 5},
    Increment = 0.1,
    CurrentValue = 1,
    Flag = "EggDelay",
    Callback = function(Value)
        NeonHub.Settings.AutoEgg.EggDelay = Value
    end
})

-- ========================================
-- TELEPORT TAB
-- ========================================

TeleportTab:CreateButton({
    Name = "Ir para Spawn",
    Callback = function()
        TeleportTo(TeleportLocations.Spawn)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Fazenda",
    Callback = function()
        TeleportTo(TeleportLocations.Farm)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Loja 1",
    Callback = function()
        TeleportTo(TeleportLocations.Shop1)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Loja 2",
    Callback = function()
        TeleportTo(TeleportLocations.Shop2)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Área de Venda",
    Callback = function()
        TeleportTo(TeleportLocations.SellArea)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Área VIP",
    Callback = function()
        TeleportTo(TeleportLocations.VIPArea)
    end
})

TeleportTab:CreateButton({
    Name = "Ir para Área Secreta",
    Callback = function()
        TeleportTo(TeleportLocations.SecretArea)
    end
})

-- ========================================
-- PLAYER MODS TAB
-- ========================================

PlayerTab:CreateSlider({
    Name = "Velocidade de Caminhada",
    Range = {16, 100},
    Increment = 1,
    CurrentValue = NeonHub.Settings.Player.WalkSpeed,
    Flag = "WalkSpeed",
    Callback = function(Value)
        NeonHub.Settings.Player.WalkSpeed = Value
        if Humanoid then
            Humanoid.WalkSpeed = Value
        end
    end
})

PlayerTab:CreateSlider({
    Name = "Potência de Pulo",
    Range = {50, 200},
    Increment = 1,
    CurrentValue = NeonHub.Settings.Player.JumpPower,
    Flag = "JumpPower",
    Callback = function(Value)
        NeonHub.Settings.Player.JumpPower = Value
        if Humanoid then
            Humanoid.JumpPower = Value
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Pulo Infinito",
    CurrentValue = NeonHub.Settings.Player.InfiniteJump,
    Flag = "InfiniteJump",
    Callback = function(Value)
        NeonHub.Settings.Player.InfiniteJump = Value
        if Value then
            ToggleInfiniteJump()
            SendNotification("Modificação de Jogador", "Pulo infinito ativado")
        end
    end
})

PlayerTab:CreateToggle({
    Name = "NoClip",
    CurrentValue = NeonHub.Settings.Player.NoClip,
    Flag = "NoClip",
    Callback = function(Value)
        NeonHub.Settings.Player.NoClip = Value
        if Value then
            ToggleNoClip()
            SendNotification("Modificação de Jogador", "NoClip ativado")
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Fly",
    CurrentValue = NeonHub.Settings.Player.Fly,
    Flag = "Fly",
    Callback = function(Value)
        NeonHub.Settings.Player.Fly = Value
        if Value then
            ToggleFly()
            SendNotification("Modificação de Jogador", "Fly ativado")
        end
    end
})

-- ========================================
-- VISUAL E ESP TAB
-- ========================================

VisualTab:CreateToggle({
    Name = "ESP Plants",
    CurrentValue = NeonHub.Settings.Visual.ESP,
    Flag = "ESP",
    Callback = function(Value)
        NeonHub.Settings.Visual.ESP = Value
        if Value then
            CreateESP()
            SendNotification("Visual", "ESP ativado!")
        else
            -- Remover ESPs existentes
            for _, gui in pairs(workspace:GetDescendants()) do
                if gui.Name == "ESP" then
                    gui:Destroy()
                end
            end
            SendNotification("Visual", "ESP desativado!")
        end
    end
})

VisualTab:CreateToggle({
    Name = "Full Bright",
    CurrentValue = NeonHub.Settings.Visual.FullBright,
    Flag = "FullBright",
    Callback = function(Value)
        NeonHub.Settings.Visual.FullBright = Value
        ToggleFullBright()
        if Value then
            SendNotification("Visual", "Full Bright ativado!")
        else
            SendNotification("Visual", "Full Bright desativado!")
        end
    end
})

-- ========================================
-- PERFORMANCE TAB
-- ========================================

PerformanceTab:CreateToggle({
    Name = "Otimização FPS",
    CurrentValue = NeonHub.Settings.Performance.FPSBoost,
    Flag = "FPSBoost",
    Callback = function(Value)
        NeonHub.Settings.Performance.FPSBoost = Value
        if Value then
            ApplyFPSBoost()
            SendNotification("Performance", "Otimização de FPS ativada!")
        end
    end
})

PerformanceTab:CreateToggle({
    Name = "Anti-AFK",
    CurrentValue = NeonHub.Settings.Performance.AntiAFK,
    Flag = "AntiAFK",
    Callback = function(Value)
        NeonHub.Settings.Performance.AntiAFK = Value
        if Value then
            ToggleAntiAFK()
            SendNotification("Performance", "Anti-AFK ativado!")
        end
    end
})

-- ========================================
-- SERVER TAB
-- ========================================

ServerTab:CreateButton({
    Name = "Reiniciar Conexão",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end
})

ServerTab:CreateToggle({
    Name = "Reentrada Automática",
    CurrentValue = NeonHub.Settings.Server.AutoRejoin,
    Flag = "AutoRejoin",
    Callback = function(Value)
        NeonHub.Settings.Server.AutoRejoin = Value
        if Value then
            AutoRejoin()
            SendNotification("Server", "Reentrada automática ativada!")
        end
    end
})

ServerTab:CreateButton({
    Name = "Trocar de Servidor (Server Hop)",
    Callback = function()
        if NeonHub.Settings.Server.FindEmptyServer then
            FindEmptyServer()
        else
            ServerHop()
        end
    end
})

-- ========================================
-- CONFIGURAÇÕES GERAIS
-- ========================================

SettingsTab:CreateToggle({
    Name = "Salvar Configurações Automáticas",
    CurrentValue = true,
    Flag = "AutoSave",
    Callback = function(Value)
        -- implementação de salvamento no disco pode ser adicionada aqui
    end
})

-- ========================================
-- FUNÇÕES E LOOP PRINCIPAL
-- ========================================

local function GetPlantState(plant)
    if not plant then return "unknown" end
    if plant:FindFirstChild("Ready") then
        return "ready"
    elseif plant:FindFirstChild("Growing") then
        return "growing"
    elseif plant:FindFirstChild("NeedsWater") then
        return "needswater"
    else
        return "empty"
    end
end

local function FindPlants()
    local plants = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:lower():find("plant") or obj.Name:lower():find("crop") then
            table.insert(plants, obj)
        end
    end
    return plants
end

local function PlantSeed(position, seedType)
    FireRemote("PlantSeed", position, seedType or NeonHub.Settings.AutoFarm.PlantType)
end

local function WaterPlant(plant)
    if plant then
        FireRemote("WaterPlant", plant)
    end
end

local function HarvestPlant(plant)
    if plant then
        FireRemote("HarvestPlant", plant)
    end
end

local function SellItems()
    FireRemote("SellItems")
end

local function CollectDrops()
    for _, drop in pairs(Workspace:GetChildren()) do
        if drop.Name:lower():find("drop") or drop.Name:lower():find("coin") then
            if drop:FindFirstChild("Humanoid") then
                drop.Humanoid:MoveTo(RootPart.Position)
            end
        end
    end
end

local function GetShopItems()
    local success, items = InvokeRemote("GetShopItems")
    if success then
        return items
    end
    return {}
end

local function BuyItem(itemName, quantity)
    FireRemote("BuyItem", itemName, quantity or 1)
end

local function BuySeeds()
    local seedType = NeonHub.Settings.AutoFarm.PlantType
    BuyItem(seedType .. " Seeds", 10)
end

local function BuyTools()
    local tools = {"Watering Can", "Shovel", "Fertilizer"}
    for _, tool in pairs(tools) do
        BuyItem(tool, 1)
    end
end

local function UpgradeTools()
    FireRemote("UpgradeTools")
end

local function OpenEgg(eggType, amount)
    FireRemote("OpenEgg", eggType, amount)
end

local function UpdatePlayerStats()
    if Humanoid then
        Humanoid.WalkSpeed = NeonHub.Settings.Player.WalkSpeed
        Humanoid.JumpPower = NeonHub.Settings.Player.JumpPower
    end
end

local function ToggleInfiniteJump()
    if NeonHub.Settings.Player.InfiniteJump then
        UserInputService.JumpRequest:Connect(function()
            if Humanoid then
                Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

local function ToggleNoClip()
    if NeonHub.Settings.Player.NoClip then
        RunService.Stepped:Connect(function()
            for _, part in pairs(Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
end

local function ToggleFly()
    if NeonHub.Settings.Player.Fly then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = RootPart
        local flying = true
        UserInputService.InputBegan:Connect(function(input)
            if flying then
                if input.KeyCode == Enum.KeyCode.W then
                    bodyVelocity.Velocity = bodyVelocity.Velocity + (Workspace.CurrentCamera.CFrame.LookVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.S then
                    bodyVelocity.Velocity = bodyVelocity.Velocity - (Workspace.CurrentCamera.CFrame.LookVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.A then
                    bodyVelocity.Velocity = bodyVelocity.Velocity - (Workspace.CurrentCamera.CFrame.RightVector * NeonHub.Settings.Player.FlySpeed)
                elseif input.KeyCode == Enum.KeyCode.D then
                    bodyVelocity.Velocity = bodyVelocity.Velocity + (Workspace.CurrentCamera.CFrame.RightVector * NeonHub.Settings.Player.FlySpeed)
                end
            end
        end)
    end
end

local function CreateESP()
    if not NeonHub.Settings.Visual.ESP then return end
    for _, plant in pairs(FindPlants()) do
        if plant:FindFirstChild("ESP") then continue end
        local esp = Instance.new("BillboardGui")
        esp.Name = "ESP"
        esp.Size = UDim2.new(0, 100, 0, 50)
        esp.StudsOffset = Vector3.new(0, 3, 0)
        esp.Parent = plant
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 0.5
        frame.Parent = esp
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextScaled = true
        label.Font = Enum.Font.SourceSansBold
        label.Text = GetPlantState(plant)
        label.Parent = frame
        local state = GetPlantState(plant)
        if state == "ready" then
            frame.BackgroundColor3 = Color3.new(0, 1, 0)
        elseif state == "needswater" then
            frame.BackgroundColor3 = Color3.new(0, 0, 1)
        else
            frame.BackgroundColor3 = Color3.new(1, 1, 0)
        end
    end
end

local function ToggleFullBright()
    if NeonHub.Settings.Visual.FullBright then
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = false
        Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    else
        Lighting.Brightness = 1
        Lighting.ClockTime = 12
        Lighting.FogEnd = 100
        Lighting.GlobalShadows = true
        Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
    end
end

local function ApplyFPSBoost()
    if not NeonHub.Settings.Performance.FPSBoost then return end
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Material = Enum.Material.Plastic
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastRadius = 1
            v.BlastPressure = 1
        end
    end
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    settings().Rendering.QualityLevel = 1
end

local function ToggleAntiAFK()
    if NeonHub.Settings.Performance.AntiAFK then
        spawn(function()
            while NeonHub.Settings.Performance.AntiAFK do
                wait(60)
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end
        end)
    end
end

local Stats = {
    FPS = 0,
    Ping = 0,
    Players = 0,
    Memory = 0,
    Runtime = 0
}

local function UpdateStats()
    Stats.FPS = math.floor(1 / RunService.Heartbeat:Wait())
    Stats.Ping = Player:GetNetworkPing() * 1000
    Stats.Players = #Players:GetPlayers()
    Stats.Memory = math.floor(game:GetService("Stats"):GetTotalMemoryUsageMb())
    Stats.Runtime = math.floor(tick() - (game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000))
end

local function ServerHop()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data) do
        if server.playing ~= server.maxPlayers then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
    end
end

local function FindEmptyServer()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data) do
        if server.playing < 5 then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[1])
    end
end

local function AutoRejoin()
    game:GetService("GuiService").ErrorMessageChanged:Connect(function()
        if NeonHub.Settings.Server.AutoRejoin then
            TeleportService:Teleport(game.PlaceId)
        end
    end)
end

local function AutoFarmLoop()
    spawn(function()
        while true do
            wait(0.1)
            if not NeonHub.Settings.AutoFarm.Enabled then continue end
            local plants = FindPlants()
            for _, plant in pairs(plants) do
                if not plant or not plant.Parent then continue end
                local state = GetPlantState(plant)
                if NeonHub.Settings.AutoFarm.AutoHarvest and state == "ready" then
                    HarvestPlant(plant)
                    wait(NeonHub.Settings.AutoFarm.HarvestDelay)
                end
                if NeonHub.Settings.AutoFarm.AutoWater and state == "needswater" then
                    WaterPlant(plant)
                    wait(NeonHub.Settings.AutoFarm.WaterDelay)
                end
                if NeonHub.Settings.AutoFarm.AutoPlant and state == "empty" then
                    PlantSeed(plant.Position, NeonHub.Settings.AutoFarm.PlantType)
                    wait(NeonHub.Settings.AutoFarm.PlantDelay)
                end
            end
            if NeonHub.Settings.AutoFarm.AutoSell then
                SellItems()
                wait(NeonHub.Settings.AutoFarm.SellDelay)
            end
            if NeonHub.Settings.AutoFarm.AutoCollectDrops then
                CollectDrops()
            end
            if NeonHub.Settings.AutoBuy.AutoBuySeeds then
                BuySeeds()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            if NeonHub.Settings.AutoBuy.AutoBuyTools then
                BuyTools()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            if NeonHub.Settings.AutoBuy.AutoUpgradeTools then
                UpgradeTools()
                wait(NeonHub.Settings.AutoBuy.BuyDelay)
            end
            if NeonHub.Settings.AutoEgg.Enabled then
                OpenEgg(NeonHub.Settings.AutoEgg.EggType, NeonHub.Settings.AutoEgg.EggAmount)
                wait(NeonHub.Settings.AutoEgg.EggDelay)
            end
        end
    end)
end

-- ========================================
-- INICIA LOOP SE AUTO FARM ESTIVER ATIVADO
if NeonHub.Settings.AutoFarm.Enabled then
    AutoFarmLoop()
end
