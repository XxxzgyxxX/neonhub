--[[
    Neon Hub
    Versão: 2.5.1
    Data: 2023-11-15
    Desenvolvedor: By XxxzgyxxX
    Observação: Use por sua conta e risco
]]

-- Configurações iniciais
local Settings = {
    AutoFarm = true,
    AutoFarmLevel = 50, -- Nível mínimo dos inimigos para farm
    AutoFarmDistance = 25, -- Distância máxima para atacar
    AutoFarmDelay = 0.5, -- Delay entre ataques
    
   Scell = true,
    AutoSellDelay = 60, -- Segundos entre vendas
    
    AutoRaid = false,
    AutoRaidCrewOnly = true,
    
    AutoTeleportIslands = false,
    TargetIsland = "Jungle", -- Jungle, Pirate Village, Desert, etc.
    
    AutoStats = true,
    StatsPriority = {"Melee", "Defense", "Sword"}, -- Ordem de prioridade
    
    AutoAbility = true,
    AbilityPriority = {"Z", "X", "C", "V", "F"},
    
    AntiAFK = true,
    WebhookEnabled = false,
    WebhookURL = "https://discord.com/api/webhooks/..."
}

-- Serviços e variáveis globais
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

-- Verificar se o jogo é Blox Fruits
if not game.PlaceId == 2753915549 or game.PlaceId == 4442272183 or game.PlaceId == 7449423635 then
    LocalPlayer:Kick("Este script só funciona em Blox Fruits!")
    return
end

-- Funções utilitárias
function SendNotification(title, text, duration)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 5
    })
end

function WebhookLog(message)
    if Settings.WebhookEnabled and Settings.WebhookURL then
        local data = {
            ["content"] = message,
            ["embeds"] = {{
                ["title"] = "Neon Hub,
                ["description"] = message,
                ["color"] = 5814783,
                ["footer"] = {
                    ["text"] = "Script by [XxxzgyxxX] • " .. os.date("%x %X")
                }
            }}
        }
        
        local success, response = pcall(function()
            HttpService:PostAsync(Settings.WebhookURL, HttpService:JSONEncode(data))
        end)
        
        if not success then
            warn("Falha ao enviar webhook: " .. response)
        end
    end
end

-- Função para teleportar para posição
function TeleportTo(position)
    if typeof(position) == "Vector3" then
        HumanoidRootPart.CFrame = CFrame.new(position)
    elseif typeof(position) == "CFrame" then
        HumanoidRootPart.CFrame = position
    else
        warn("Tipo de posição inválido para teleporte")
    end
end

-- Função para encontrar o inimigo mais próximo
function FindNearestEnemy()
    local closestEnemy = nil
    local closestDistance = Settings.AutoFarmDistance
    
    for _, enemy in ipairs(Workspace.Enemies:GetChildren()) do
        if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
            local enemyLevel = enemy:FindFirstChild("Level") and enemy.Level.Value or 0
            if enemyLevel >= Settings.AutoFarmLevel then
                local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestEnemy = enemy
                    closestDistance = distance
                end
            end
        end
    end
    
    return closestEnemy
end

-- Função para farm automático
function AutoFarm()
    while Settings.AutoFarm do
        task.wait(Settings.AutoFarmDelay)
        
        local enemy = FindNearestEnemy()
        if enemy then
            -- Teleportar para o inimigo
            TeleportTo(enemy.HumanoidRootPart.Position + Vector3.new(0, 3, 0))
            
            -- Atacar com todas as habilidades
            if Settings.AutoAbility then
                for _, ability in ipairs(Settings.AbilityPriority) do
                    VirtualInputManager:SendKeyEvent(true, ability, false, game)
                    task.wait(0.1)
                    VirtualInputManager:SendKeyEvent(false, ability, false, game)
                end
            end
            
            -- Ataque básico
            VirtualInputManager:SendKeyEvent(true, "One", false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, "One", false, game)
        end
    end
end

-- Função para vender automaticamente
function AutoSell()
    while Settings.AutoSell do
        task.wait(Settings.AutoSellDelay)
        
        -- Teleportar para o vendedor mais próximo
        local sellLocation = Vector3.new(-144.724, 23.398, 141.724) -- Posição do vendedor
        TeleportTo(sellLocation)
        
        -- Simular interação com o vendedor
        task.wait(1)
        local args = {
            [1] = "1"
        }
        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
        
        task.wait(1)
        local args = {
            [1] = "2"
        }
        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
        
        task.wait(1)
        local args = {
            [1] = "3"
        }
        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
        
        SendNotification("Auto Sell", "Itens vendidos com sucesso!", 5)
        WebhookLog("Itens vendidos automaticamente")
    end
end

-- Função para melhorar stats automaticamente
function AutoStats()
    while Settings.AutoStats do
        for _, stat in ipairs(Settings.StatsPriority) do
            local args = {
                [1] = "AddPoint",
                [2] = stat
            }
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
            task.wait(0.5)
        end
        task.wait(10) -- Verificar a cada 10 segundos
    end
end

-- Função anti-AFK
function AntiAFK()
    local VirtualUser = game:GetService("VirtualUser")
    LocalPlayer.Idled:Connect(function()
        if Settings.AntiAFK then
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
            WebhookLog("Anti-AFK ativado para prevenir kick")
        end
    end)
end

-- Interface gráfica (usando a biblioteca Rayfield)
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
end)

if success then
    local Window = Rayfield:CreateWindow({
        Name = "Neon Hub v2.5.1",
        LoadingTitle = "Carregando...",
        LoadingSubtitle = "by XxxzgyxxX",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "Neon Hub",
            FileName = "Config"
        },
        Discord = {
            Enabled = true,
            Invite = "discord.gg/neonhub", -- Convite do Discord
            RememberJoins = true
        }
    })

    -- Tab de Farm
    local FarmTab = Window:CreateTab("Farm", 4483362458)
    
    FarmTab:CreateToggle({
        Name = "Auto Farm",
        CurrentValue = Settings.AutoFarm,
        Callback = function(Value)
            Settings.AutoFarm = Value
            if Value then
                coroutine.wrap(AutoFarm)()
            end
        end
    })
    
    FarmTab:CreateSlider({
        Name = "Nível Mínimo",
        Range = {1, 2000},
        Increment = 1,
        Suffix = "Level",
        CurrentValue = Settings.AutoFarmLevel,
        Callback = function(Value)
            Settings.AutoFarmLevel = Value
        end
    })
    
    FarmTab:CreateToggle({
        Name = "Auto Habilidades",
        CurrentValue = Settings.AutoAbility,
        Callback = function(Value)
            Settings.AutoAbility = Value
        end
    })
    
    -- Tab de Venda
    local SellTab = Window:CreateTab("Venda", 4483362458)
    
    SellTab:CreateToggle({
        Name = "Auto Vender",
        CurrentValue = Settings.AutoSell,
        Callback = function(Value)
            Settings.AutoSell = Value
            if Value then
                coroutine.wrap(AutoSell)()
            end
        end
    })
    
    SellTab:CreateSlider({
        Name = "Intervalo de Venda",
        Range = {30, 600},
        Increment = 10,
        Suffix = "segundos",
        CurrentValue = Settings.AutoSellDelay,
        Callback = function(Value)
            Settings.AutoSellDelay = Value
        end
    })
    
    -- Tab de Stats
    local StatsTab = Window:CreateTab("Stats", 4483362458)
    
    StatsTab:CreateToggle({
        Name = "Auto Stats",
        CurrentValue = Settings.AutoStats,
        Callback = function(Value)
            Settings.AutoStats = Value
            if Value then
                coroutine.wrap(AutoStats)()
            end
        end
    })
    
    StatsTab:CreateDropdown({
        Name = "Prioridade de Stats",
        Options = {"Melee", "Defense", "Sword", "Gun", "Devil Fruit"},
        CurrentOption = Settings.StatsPriority,
        MultipleOptions = true,
        Callback = function(Option)
            Settings.StatsPriority = Option
        end
    })
    
    -- Tab de Misc
    local MiscTab = Window:CreateTab("Miscelânea", 4483362458)
    
    MiscTab:CreateToggle({
        Name = "Anti-AFK",
        CurrentValue = Settings.AntiAFK,
        Callback = function(Value)
            Settings.AntiAFK = Value
        end
    })
    
    MiscTab:CreateButton({
        Name = "Copiar Localização",
        Callback = function()
            setclipboard(tostring(HumanoidRootPart.Position))
            SendNotification("Sucesso", "Localização copiada para o clipboard!", 3)
        end
    })
    
    MiscTab:CreateInput({
        Name = "Webhook URL",
        PlaceholderText = "https://discord.com/api/webhooks/...",
        RemoveTextAfterFocusLost = false,
        Callback = function(Text)
            Settings.WebhookURL = Text
        end
    })
    
    MiscTab:CreateToggle({
        Name = "Webhook Logs",
        CurrentValue = Settings.WebhookEnabled,
        Callback = function(Value)
            Settings.WebhookEnabled = Value
        end
    })
    
    -- Inicializar funções
    if Settings.AutoFarm then coroutine.wrap(AutoFarm)() end
    if Settings.AutoSell then coroutine.wrap(AutoSell)() end
    if Settings.AutoStats then coroutine.wrap(AutoStats)() end
    if Settings.AntiAFK then AntiAFK() end
    
    SendNotification("Script Carregado", "Blox Fruits Script v2.5.1 ativado!", 5)
    WebhookLog("Script iniciado com sucesso para " .. LocalPlayer.Name)
else
    -- Se Rayfield não carregar, usar interface simples
    SendNotification("Aviso", "Interface avançada falhou, usando funções básicas", 5)
    
    -- Inicializar funções sem interface
    if Settings.AutoFarm then coroutine.wrap(AutoFarm)() end
    if Settings.AutoSell then coroutine.wrap(AutoSell)() end
    if Settings.AutoStats then coroutine.wrap(AutoStats)() end
    if Settings.AntiAFK then AntiAFK() end
end
