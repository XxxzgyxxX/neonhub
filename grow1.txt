--[[
üå± Grow Max - Script Profissional M√°ximo
Vers√£o Otimizada com Melhores Pr√°ticas
Por AI Chat
--]]

-- Servi√ßos essenciais
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Configura√ß√µes globais
local Config = {
    Delay = 0.2,
    PlantType = "Carrot",
    AutoFarm = false,
    AutoPlant = false,
    AutoWater = false,
    AutoHarvest = false,
    AutoSell = false,
    AutoDrops = false,
    AutoEgg = false,
    EggType = "Common",
    EggAmount = 1,
    EggDelay = 1,
    Speed = 20,
    JumpPower = 60,
    FlyActive = false,
    NoclipActive = false,
    SaveSettings = true,
    Teleports = {
        Spawn = Vector3.new(0, 5, 0),
        Farm = Vector3.new(150, 5, 150),
        Shop = Vector3.new(-100, 5, 50),
        SellArea = Vector3.new(300, 5, 300),
        VIP = Vector3.new(-250, 5, -250),
        Secret = Vector3.new(0, 5, 600),
    }
}

-- Fun√ß√£o de teleport com tween
local function Teleport(pos)
    if RootPart then
        local tween = TweenService:Create(RootPart, TweenInfo.new(1, Enum.EasingStyle.Quad), {CFrame = CFrame.new(pos)})
        tween:Play()
    end
end

-- Fun√ß√£o para chamar eventos remotos
local function FireRemote(name, ...)
    local remote = ReplicatedStorage:FindFirstChild(name)
    if remote and remote:IsA("RemoteEvent") then
        remote:FireServer(...)
    end
end

-- Criar interface do usu√°rio (resposta m√≥vel)
local function CreateUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "GrowMaxUI"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame", ScreenGui)
    MainFrame.Size = UDim2.new(0, 380, 0, 700)
    MainFrame.Position = UDim2.new(0, 10, 0.2, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
    MainFrame.BorderSizePixel = 0

    local Title = Instance.new("TextLabel", MainFrame)
    Title.Size = UDim2.new(1,0,0,50)
    Title.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Title.Text = "üå± Grow Max"
    Title.TextColor3 = Color3.new(1,1,1)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 24

    local YPos = 60

    local function createButton(text, callback)
        local btn = Instance.new("TextButton", MainFrame)
        btn.Size = UDim2.new(1, -20, 0, 40)
        btn.Position = UDim2.new(0, 10, 0, YPos)
        btn.BackgroundColor3 = Color3.fromRGB(70,70,70)
        btn.TextColor3 = Color3.new(1,1,1)
        btn.Font = Enum.Font.GothamMedium
        btn.TextSize = 18
        btn.Text = text
        btn.MouseButton1Click:Connect(callback)
        YPos = YPos + 50
        return btn
    end

    -- Bot√µes de teleporte
    createButton("Teleport: Spawn", function() Teleport(Config.Teleports.Spawn) end)
    createButton("Teleport: Farm", function() Teleport(Config.Teleports.Farm) end)
    createButton("Teleport: Shop", function() Teleport(Config.Teleports.Shop) end)
    createButton("Teleport: Sell", function() Teleport(Config.Teleports.SellArea) end)
    createButton("Teleport: VIP", function() Teleport(Config.Teleports.VIP) end)
    createButton("Teleport: Secret", function() Teleport(Config.Teleports.Secret) end)

    YPos = YPos + 20

    -- Automa√ß√£o: Auto Farm
    local autoFarmBtn = createButton("üöÄ Auto Farm: OFF", function()
        Config.AutoFarm = not Config.AutoFarm
        autoFarmBtn.Text = "üöÄ Auto Farm: " .. (Config.AutoFarm and "ON" or "OFF")
        if Config.AutoFarm then startAutoFarm() else stopAutoFarm() end
    end)

    -- Bot√µes de toggle para automa√ß√µes
    local function createToggleButton(nome, configKey)
        local btn = createButton(nome .. ": OFF", function()
            Config[configKey] = not Config[configKey]
            btn.Text = nome .. ": " .. (Config[configKey] and "ON" or "OFF")
        end)
        btn.Text = nome .. ": OFF"
        return btn
    end

    local btnAutoPlant = createToggleButton("Auto Plant", "AutoPlant")
    local btnAutoWater = createToggleButton("Auto Water", "AutoWater")
    local btnAutoHarvest = createToggleButton("Auto Harvest", "AutoHarvest")
    local btnAutoSell = createToggleButton("Auto Sell", "AutoSell")
    local btnAutoDrops = createToggleButton("Auto Drops", "AutoDrops")
    local btnAutoEgg = createToggleButton("Auto Egg", "AutoEgg")

    YPos = YPos + 20

    -- Slider para Delay
    local function createSlider(nome, min, max, default, callback)
        local label = Instance.new("TextLabel", MainFrame)
        label.Size = UDim2.new(1, -20, 0, 20)
        label.Position = UDim2.new(0, 10, 0, YPos)
        label.Text = nome
        label.TextColor3 = Color3.new(1,1,1)
        label.Font = Enum.Font.GothamMedium
        label.TextSize = 14

        local slider = Instance.new("Slider", MainFrame)
        slider.Size = UDim2.new(1, -20, 0, 20)
        slider.Position = UDim2.new(0, 10, 0, YPos + 20)
        slider.Min = min
        slider.Max = max
        slider.Value = default
        slider.Changed:Connect(function(val)
            callback(val)
        end)
        YPos = YPos + 50
    end

    createSlider("Delay", 0.1, 2, Config.Delay, function(val)
        Config.Delay = val
    end)

    -- Controle de velocidade
    createSlider("Velocidade", 8, 64, Config.Speed, function(val)
        Config.Speed = val
        Humanoid.WalkSpeed = val
    end)

    -- Controle de pulo
    createSlider("Altura Pulo", 30, 100, Config.JumpPower, function(val)
        Config.JumpPower = val
        Humanoid.JumpPower = val
    end)

    -- Bot√£o Fly
    local FlyBtn = createButton("Ativar Fly", function()
        ToggleFly()
        FlyBtn.Text = "Fly: " .. (Config.FlyActive and "ON" or "OFF")
    end)

    -- Bot√£o Noclip
    local NoclipBtn = createButton("Ativar Noclip", function()
        ToggleNoclip()
        NoclipBtn.Text = "Noclip: " .. (Config.NoclipActive and "ON" or "OFF")
    end)

    -- Estat√≠sticas
    local StatsLabel = Instance.new("TextLabel", MainFrame)
    StatsLabel.Size = UDim2.new(1, -20, 0, 50)
    StatsLabel.Position = UDim2.new(0, 10, 1, -60)
    StatsLabel.BackgroundColor3 = Color3.fromRGB(40,40,40)
    StatsLabel.TextColor3 = Color3.new(1,1,1)
    StatsLabel.Font = Enum.Font.GothamBold
    StatsLabel.TextSize = 14

    spawn(function()
        while true do
            local fps = math.floor(1 / RunService.Heartbeat:Wait())
            local ping = Player:GetNetworkPing and math.floor(Player:GetNetworkPing() * 1000) or "N/A"
            local playersCount = #Players:GetPlayers()
            StatsLabel.Text = string.format("FPS: %d | Ping: %s ms | Players: %d", fps, ping, playersCount)
            wait(1)
        end
    end)

    return {
        Gui = ScreenGui,
        AutoFarmBtn = autoFarmBtn,
        FlyBtn = FlyBtn,
        NoclipBtn = NoclipBtn,
        StatsLabel = StatsLabel
    }
end

local UI = CreateUI()

-- Vari√°veis de controle
local autoFarmRunning = false
local autoFarmConnection

-- Fun√ß√µes de automa√ß√£o
local function startAutoFarm()
    if autoFarmRunning then return end
    autoFarmRunning = true
    autoFarmConnection = spawn(function()
        while autoFarmRunning do
            -- Detectar plantas
            local plants = {}
            for _, v in pairs(Workspace:GetDescendants()) do
                if v.Name:lower():find("plant") then
                    table.insert(plants, v)
                end
            end

            for _, plant in pairs(plants) do
                local state = "unknown"
                if plant:FindFirstChild("Ready") then
                    state = "ready"
                elseif plant:FindFirstChild("NeedsWater") then
                    state = "needsWater"
                elseif plant:FindFirstChild("Empty") then
                    state = "empty"
                end

                if Config.AutoHarvest and state == "ready" then
                    FireRemote("HarvestPlant", plant)
                elseif Config.AutoWater and state == "needsWater" then
                    FireRemote("WaterPlant", plant)
                elseif Config.AutoPlant and state == "empty" then
                    FireRemote("PlantSeed", plant.Position, Config.PlantType)
                end
            end

            if Config.AutoSell then
                FireRemote("SellItems")
            end

            if Config.AutoDrops then
                for _, obj in pairs(Workspace:GetChildren()) do
                    if obj.Name:lower():find("drop") or obj.Name:lower():find("coin") then
                        if obj:FindFirstChild("Humanoid") then
                            FireRemote("CollectDrop", obj)
                        end
                    end
                end
            end

            if Config.AutoEgg then
                FireRemote("OpenEgg", Config.EggType, Config.EggAmount)
            end

            wait(Config.Delay)
        end
    end)
end

local function stopAutoFarm()
    autoFarmRunning = false
    if autoFarmConnection then
        autoFarmConnection = nil
    end
end

-- Ativar/desativar auto farm
UI.AutoFarmBtn.MouseButton1Click:Connect(function()
    Config.AutoFarm = not Config.AutoFarm
    UI.AutoFarmBtn.Text = "üöÄ Auto Farm: " .. (Config.AutoFarm and "ON" or "OFF")
    if Config.AutoFarm then startAutoFarm() else stopAutoFarm() end
end)

-- Fly toggle
local function ToggleFly()
    if Config.FlyActive then
        if RootPart:FindFirstChild("BodyVelocity") then
            RootPart.BodyVelocity:Destroy()
        end
        Config.FlyActive = false
    else
        local bv = Instance.new("BodyVelocity", RootPart)
        bv.Velocity = Vector3.new(0, 0, 0)
        bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
        spawn(function()
            while Config.FlyActive do
                local camDir = Workspace.CurrentCamera.CFrame.LookVector
                bv.Velocity = camDir * 50
                wait(0.1)
            end
        end)
        Config.FlyActive = true
    end
end
UI.FlyBtn.MouseButton1Click:Connect(ToggleFly)

-- Noclip toggle
local function ToggleNoclip()
    if Config.NoclipActive then
        for _, part in pairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        Config.NoclipActive = false
    else
        for _, part in pairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        Config.NoclipActive = true
    end
end
UI.NoclipBtn.MouseButton1Click:Connect(ToggleNoclip)

-- Atalhos de teclado
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Y then
        ToggleFly()
    elseif input.KeyCode == Enum.KeyCode.P then
        Teleport(Config.Teleports.Spawn)
    elseif input.KeyCode == Enum.KeyCode.H then
        ToggleNoclip()
    end
end)
