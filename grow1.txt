--[=[ 
  üöÄ Script Grow a Garden - Vers√£o Melhorada com Configura√ß√£o por Jogador
]=]

-- ========================================
-- SERVI√áOS E INICIALIZA√á√ÉO
-- ========================================

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local DataStoreService = game:GetService("DataStoreService")

local ConfigDataStore = DataStoreService:GetDataStore("GrowAGardenConfig")

local function SendNotification(title, text, duration)
    duration = duration or 5
    StarterGui:SetCore("SendNotification", {
        Title = "üåü " .. title,
        Text = text,
        Duration = duration,
        Icon = "rbxassetid://6023426923"
    })
end

local function SafeCall(func, ...)
    local success, result = pcall(func, ...)
    if not success then warn("Erro: " .. tostring(result)) end
    return success, result
end

-- ========================================
-- CONFIGURA√á√ïES PADR√ÉO (ESTRUTURA)
-- ========================================

local DefaultConfig = {
    AutoFarm = {
        Enabled = false,
        PlantType = "Carrot",
        AutoPlant = false,
        AutoWater = false,
        AutoHarvest = false,
        AutoSell = false,
        AutoCollectDrops = false,
        PlantDelay = 0.5,
        WaterDelay = 0.5,
        HarvestDelay = 0.5,
        SellDelay = 0.5
    },
    AutoBuy = {
        AutoBuySeeds = false,
        AutoBuyTools = false,
        AutoUpgradeTools = false,
        BuyDelay = 1
    },
    AutoEgg = {
        Enabled = false,
        EggType = "Common",
        EggAmount = 1,
        EggDelay = 1
    },
    Player = {
        WalkSpeed = 16,
        JumpPower = 50,
        InfiniteJump = false,
        NoClip = false,
        Fly = false,
        FlySpeed = 50
    },
    Visual = {
        ESP = false,
        FullBright = false,
        UIScale = 1.0,
        UITransparency = 0.1
    },
    Performance = {
        FPSBoost = false,
        LowGraphics = false,
        AntiAFK = false
    },
    Server = {
        AutoRejoin = false,
        ServerHop = false,
        FindEmptyServer = false
    },
    Teleport = {
        TeleportSpeed = 1,
        SmartTeleport = false
    }
}

-- ========================================
-- UTILIT√ÅRIAS
-- ========================================

local function SaveConfig(player, config)
    local success, err = pcall(function()
        ConfigDataStore:SetAsync(tostring(player.UserId), config)
    end)
    if not success then warn("Erro ao salvar config de " .. player.Name .. ": " .. err) end
end

local function LoadConfig(player)
    local success, data = pcall(function()
        return ConfigDataStore:GetAsync(tostring(player.UserId))
    end)
    if success and data then
        return data
    else
        return nil
    end
end

local function ApplyPlayerSettings(player, config)
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = config.Player.WalkSpeed
        humanoid.JumpPower = config.Player.JumpPower
    end
    -- Voc√™ pode aplicar outras configura√ß√µes aqui, como FullBright, ESP, etc.
end

-- ========================================
-- SISTEMA DE TELEPORT
-- ========================================

local TeleportLocations = {
    Spawn = Vector3.new(0, 5, 0),
    Farm = Vector3.new(100, 5, 100),
    Shop1 = Vector3.new(-50, 5, 50),
    Shop2 = Vector3.new(50, 5, -50),
    Shop3 = Vector3.new(-100, 5, -100),
    SellArea = Vector3.new(200, 5, 200),
    VIPArea = Vector3.new(-200, 5, -200),
    SecretArea = Vector3.new(0, 5, 500)
}

local function TeleportTo(position)
    local root = workspace:FindFirstChild("HumanoidRootPart")
    if not root then return end
    local speed = NeonHub.Settings.Teleport.TeleportSpeed
    if speed <= 0.1 then
        root.CFrame = CFrame.new(position)
    else
        local tween = TweenService:Create(root, TweenInfo.new(speed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(position)})
        tween:Play()
    end
end

-- ========================================
-- SISTEMA DE FARMING
-- ========================================

local function FindPlants()
    local plants = {}
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:lower():find("plant") or obj.Name:lower():find("crop") then
            table.insert(plants, obj)
        end
    end
    return plants
end

local function GetPlantState(plant)
    if not plant then return "unknown" end
    if plant:FindFirstChild("Ready") then return "ready" end
    if plant:FindFirstChild("Growing") then return "growing" end
    if plant:FindFirstChild("NeedsWater") then return "needswater" end
    return "empty"
end

local function PlantSeed(position, seedType)
    FireRemote("PlantSeed", position, seedType or NeonHub.Settings.AutoFarm.PlantType)
end

local function WaterPlant(plant)
    FireRemote("WaterPlant", plant)
end

local function HarvestPlant(plant)
    FireRemote("HarvestPlant", plant)
end

local function SellItems()
    FireRemote("SellItems")
end

local function CollectDrops()
    for _, drop in pairs(Workspace:GetChildren()) do
        if drop.Name:lower():find("drop") or drop.Name:lower():find("coin") then
            if drop:FindFirstChild("Humanoid") then
                drop.Humanoid:MoveTo(workspace:FindFirstChildOfClass("Humanoid"):RootPart.Position)
            end
        end
    end
end

-- ========================================
-- SISTEMA DE AUTO COMPRA E OVOS
-- ========================================

local function GetShopItems()
    local success, items = pcall(function() return InvokeRemote("GetShopItems") end)
    if success then return items else return {} end
end

local function BuyItem(itemName, quantity)
    FireRemote("BuyItem", itemName, quantity or 1)
end

local function BuySeeds()
    local seedType = NeonHub.Settings.AutoFarm.PlantType
    BuyItem(seedType .. " Seeds", 10)
end

local function BuyTools()
    local tools = {"Watering Can", "Shovel", "Fertilizer"}
    for _, tool in pairs(tools) do
        BuyItem(tool, 1)
    end
end

local function UpgradeTools()
    FireRemote("UpgradeTools")
end

local function OpenEgg(eggType, amount)
    FireRemote("OpenEgg", eggType, amount)
end

-- ========================================
-- MODIFICA√á√ïES DO JOGADOR
-- ========================================

local function UpdatePlayerAttributes(player, config)
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = config.Player.WalkSpeed
        humanoid.JumpPower = config.Player.JumpPower
    end
end

local function ToggleInfiniteJump(config)
    if config.Player.InfiniteJump then
        UserInputService.JumpRequest:Connect(function()
            local char = Players.LocalPlayer.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

local function ToggleNoClip(config)
    if config.Player.NoClip then
        RunService.Stepped:Connect(function()
            for _, part in pairs(Players.LocalPlayer.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
end

local function ToggleFly(config)
    if config.Player.Fly then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Parent = workspace:FindFirstChild("HumanoidRootPart") or workspace:WaitForChild("HumanoidRootPart")
        local flying = true
        UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == Enum.KeyCode.W then
                    bodyVelocity.Velocity = workspace.CurrentCamera.CFrame.LookVector * config.Player.FlySpeed
                elseif input.KeyCode == Enum.KeyCode.S then
                    bodyVelocity.Velocity = -workspace.CurrentCamera.CFrame.LookVector * config.Player.FlySpeed
                elseif input.KeyCode == Enum.KeyCode.A then
                    bodyVelocity.Velocity = -workspace.CurrentCamera.CFrame.RightVector * config.Player.FlySpeed
                elseif input.KeyCode == Enum.KeyCode.D then
                    bodyVelocity.Velocity = workspace.CurrentCamera.CFrame.RightVector * config.Player.FlySpeed
                end
            end
        end)
    end
end

-- ========================================
-- VISUAL E ESP
-- ========================================

local function CreateESP()
    if not NeonHub.Settings.Visual.ESP then return end
    for _, plant in pairs(FindPlants()) do
        if plant:FindFirstChild("ESP") then continue end
        local esp = Instance.new("BillboardGui")
        esp.Name = "ESP"
        esp.Size = UDim2.new(0, 100, 0, 50)
        esp.StudsOffset = Vector3.new(0, 3, 0)
        esp.Parent = plant
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 0.5
        frame.Parent = esp
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1,1,1)
        label.TextScaled = true
        label.Font = Enum.Font.SourceSansBold
        label.Text = GetPlantState(plant)
        label.Parent = frame

        local state = GetPlantState(plant)
        if state == "ready" then
            frame.BackgroundColor3 = Color3.new(0,1,0)
        elseif state == "needswater" then
            frame.BackgroundColor3 = Color3.new(0,0,1)
        else
            frame.BackgroundColor3 = Color3.new(1,1,0)
        end
    end
end

local function ToggleFullBright()
    if NeonHub.Settings.Visual.FullBright then
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = false
        Lighting.OutdoorAmbient = Color3.fromRGB(128,128,128)
    else
        Lighting.Brightness = 1
        Lighting.ClockTime = 12
        Lighting.FogEnd = 100
        Lighting.GlobalShadows = true
        Lighting.OutdoorAmbient = Color3.fromRGB(70,70,70)
    end
end

-- ========================================
-- PERFORMANCE E OTIMIZA√á√ÉO FPS
-- ========================================

local function ApplyFPSBoost()
    if not NeonHub.Settings.Performance.FPSBoost then return end
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Material = Enum.Material.Plastic
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastRadius = 1
            v.BlastPressure = 1
        end
    end
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    settings().Rendering.QualityLevel = 1
end

local function ToggleAntiAFK()
    if NeonHub.Settings.Performance.AntiAFK then
        spawn(function()
            while NeonHub.Settings.Performance.AntiAFK do
                wait(60)
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end
        end)
    end
end

local Stats = {
    FPS = 0,
    Ping = 0,
    Players = 0,
    Memory = 0,
    Runtime = 0
}

local function UpdateStats()
    Stats.FPS = math.floor(1 / RunService.Heartbeat:Wait())
    Stats.Ping = Player:GetNetworkPing() * 1000
    Stats.Players = #Players:GetPlayers()
    Stats.Memory = math.floor(game:GetService("Stats"):GetTotalMemoryUsageMb())
    Stats.Runtime = math.floor(tick() - (game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000))
end

-- ========================================
-- SERVIDOR
-- ========================================

local function ServerHop()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data or {}) do
        if server.playing ~= server.maxPlayers then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
    end
end

local function FindEmptyServer()
    local servers = {}
    local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")
    local body = HttpService:JSONDecode(req)
    for _, server in pairs(body.data or {}) do
        if server.playing < 5 then
            table.insert(servers, server.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[1])
    end
end

local function AutoRejoin()
    game:GetService("GuiService").ErrorMessageChanged:Connect(function()
        if NeonHub.Settings.Server.AutoRejoin then
            TeleportService:Teleport(game.PlaceId)
        end
    end)
end

-- ========================================
-- LOOP PRINCIPAL AUTO FARM
-- ========================================

local function AutoFarmLoop(playerConfig)
    spawn(function()
        while true do
            wait(0.1)
            if not playerConfig.AutoFarm.Enabled then
                wait(1)
                continue
            end
            local plants = FindPlants()
            for _, plant in pairs(plants) do
                if not plant or not plant.Parent then continue end
                local state = GetPlantState(plant)
                -- Auto Harvest
                if playerConfig.AutoFarm.AutoHarvest and state == "ready" then
                    HarvestPlant(plant)
                    wait(playerConfig.AutoFarm.HarvestDelay)
                end
                -- Auto Water
                if playerConfig.AutoFarm.AutoWater and state == "needswater" then
                    WaterPlant(plant)
                    wait(playerConfig.AutoFarm.WaterDelay)
                end
                -- Auto Plant
                if playerConfig.AutoFarm.AutoPlant and state == "empty" then
                    PlantSeed(plant.Position, playerConfig.AutoFarm.PlantType)
                    wait(playerConfig.AutoFarm.PlantDelay)
                end
            end
            -- Auto Sell
            if playerConfig.AutoFarm.AutoSell then
                SellItems()
                wait(playerConfig.AutoFarm.SellDelay)
            end
            -- Auto Drop & Egg & AutoBuy
            if playerConfig.AutoFarm.AutoCollectDrops then
                CollectDrops()
            end
            if playerConfig.AutoEgg.Enabled then
                OpenEgg(playerConfig.AutoEgg.EggType, playerConfig.AutoEgg.EggAmount)
                wait(playerConfig.AutoEgg.EggDelay)
            end
            if playerConfig.AutoBuy.AutoBuySeeds then
                BuySeeds()
                wait(playerConfig.AutoBuy.BuyDelay)
            end
            if playerConfig.AutoBuy.AutoBuyTools then
                BuyTools()
                wait(playerConfig.AutoBuy.BuyDelay)
            end
            if playerConfig.AutoBuy.AutoUpgradeTools then
                UpgradeTools()
                wait(playerConfig.AutoBuy.BuyDelay)
            end
        end
    end)
end

-- ========================================
-- EVENTOS E INICIALIZA√á√ÉO
-- ========================================

Players.PlayerAdded:Connect(function(player)
    local config = LoadConfig(player)
    if not config then
        config = DefaultConfig
    end
    -- Salva uma c√≥pia do config na tabela do player
    player:SetAttribute("Config", config)
    -- Aplicar configura√ß√µes ao personagem
    ApplyPlayerSettings(player, config)
    -- Iniciar auto farm se ativado
    if config.AutoFarm.Enabled then
        AutoFarmLoop(config)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    local config = player:GetAttribute("Config")
    if config then
        SaveConfig(player, config)
    end
end)

-- ============================
-- EXECUTA LOOP PRINCIPAL SE ATIVO
-- ============================

local function StartAutoFarmIfEnabled(player)
    local config = player:GetAttribute("Config")
    if config and config.AutoFarm.Enabled then
        AutoFarmLoop(config)
    end
end

-- Voc√™ pode tamb√©m criar comandos ou UI para alterar configura√ß√µes em tempo real
-- e salvar atualiza√ß√µes na tabela "Config" do player, que ser√° salva ao sair.
