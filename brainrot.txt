
-- Neon Hub | By XzgyX
-- Brainrot Complete Script

-- Load UI Library (Rayfield)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create Main Window
local Window = Rayfield:CreateWindow({
   Name = "Neon Hub | By XzgyX",
   LoadingTitle = "Brainrot Script Loading...",
   LoadingSubtitle = "by XzgyX",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "NeonHub",
      FileName = "BrainrotConfig"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
})

-- Variables
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

-- Script States
local AutoClick = false
local AutoRebirth = false
local AutoUpgrade = false
local AutoCollect = false
local WalkSpeed = 16
local JumpPower = 50

-- Create Tabs
local MainTab = Window:CreateTab("üéÆ Main Features", 4483362458)
local PlayerTab = Window:CreateTab("üë§ Player", 4483362458)
local MiscTab = Window:CreateTab("‚öôÔ∏è Miscellaneous", 4483362458)
local TeleportTab = Window:CreateTab("üöÄ Teleports", 4483362458)

-- Main Features Section
local MainSection = MainTab:CreateSection("Auto Features")

-- Auto Click Toggle
MainTab:CreateToggle({
   Name = "üñ±Ô∏è Auto Click",
   CurrentValue = false,
   Flag = "AutoClick",
   Callback = function(Value)
      AutoClick = Value
      if AutoClick then
         spawn(function()
            while AutoClick do
               wait(0.01)
               -- Find and click the main button
               for _, v in pairs(workspace:GetDescendants()) do
                  if v.Name == "ClickPart" or v.Name == "Button" or v.Name == "Click" then
                     if v:IsA("BasePart") and v.ClickDetector then
                        fireclickdetector(v.ClickDetector)
                     end
                  end
               end
               
               -- Alternative method for GUI clicks
               for _, gui in pairs(LocalPlayer.PlayerGui:GetDescendants()) do
                  if gui:IsA("TextButton") and (gui.Name:lower():find("click") or gui.Name:lower():find("tap")) then
                     for _, connection in pairs(getconnections(gui.MouseButton1Click)) do
                        connection:Fire()
                     end
                  end
               end
            end
         end)
      end
   end,
})

-- Auto Rebirth Toggle
MainTab:CreateToggle({
   Name = "üîÑ Auto Rebirth",
   CurrentValue = false,
   Flag = "AutoRebirth",
   Callback = function(Value)
      AutoRebirth = Value
      if AutoRebirth then
         spawn(function()
            while AutoRebirth do
               wait(1)
               -- Find rebirth button/part
               for _, v in pairs(workspace:GetDescendants()) do
                  if v.Name:lower():find("rebirth") or v.Name:lower():find("prestige") then
                     if v:IsA("BasePart") and v.ClickDetector then
                        fireclickdetector(v.ClickDetector)
                     end
                  end
               end
               
               -- GUI rebirth buttons
               for _, gui in pairs(LocalPlayer.PlayerGui:GetDescendants()) do
                  if gui:IsA("TextButton") and (gui.Name:lower():find("rebirth") or gui.Text:lower():find("rebirth")) then
                     for _, connection in pairs(getconnections(gui.MouseButton1Click)) do
                        connection:Fire()
                     end
                  end
               end
            end
         end)
      end
   end,
})

-- Auto Upgrade Toggle
MainTab:CreateToggle({
   Name = "‚¨ÜÔ∏è Auto Upgrade",
   CurrentValue = false,
   Flag = "AutoUpgrade",
   Callback = function(Value)
      AutoUpgrade = Value
      if AutoUpgrade then
         spawn(function()
            while AutoUpgrade do
               wait(0.5)
               -- Find upgrade buttons
               for _, gui in pairs(LocalPlayer.PlayerGui:GetDescendants()) do
                  if gui:IsA("TextButton") and (gui.Name:lower():find("upgrade") or gui.Text:lower():find("upgrade") or gui.Name:lower():find("buy")) then
                     for _, connection in pairs(getconnections(gui.MouseButton1Click)) do
                        connection:Fire()
                     end
                  end
               end
            end
         end)
      end
   end,
})

-- Auto Collect Items
MainTab:CreateToggle({
   Name = "üí∞ Auto Collect",
   CurrentValue = false,
   Flag = "AutoCollect",
   Callback = function(Value)
      AutoCollect = Value
      if AutoCollect then
         spawn(function()
            while AutoCollect do
               wait(0.1)
               for _, v in pairs(workspace:GetDescendants()) do
                  if v.Name:lower():find("coin") or v.Name:lower():find("money") or v.Name:lower():find("cash") or v.Name:lower():find("orb") then
                     if v:IsA("BasePart") and v.Parent and v.Parent.Name ~= LocalPlayer.Name then
                        if (v.Position - Character.HumanoidRootPart.Position).Magnitude < 50 then
                           Character.HumanoidRootPart.CFrame = v.CFrame
                           wait(0.1)
                        end
                     end
                  end
               end
            end
         end)
      end
   end,
})

-- Player Modifications Section
local PlayerSection = PlayerTab:CreateSection("Player Modifications")

-- WalkSpeed Slider
PlayerTab:CreateSlider({
   Name = "üèÉ Walk Speed",
   Range = {16, 200},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSpeed",
   Callback = function(Value)
      WalkSpeed = Value
      if Character and Character:FindFirstChild("Humanoid") then
         Character.Humanoid.WalkSpeed = WalkSpeed
      end
   end,
})

-- JumpPower Slider
PlayerTab:CreateSlider({
   Name = "ü¶ò Jump Power",
   Range = {50, 200},
   Increment = 1,
   Suffix = "Power",
   CurrentValue = 50,
   Flag = "JumpPower",
   Callback = function(Value)
      JumpPower = Value
      if Character and Character:FindFirstChild("Humanoid") then
         Character.Humanoid.JumpPower = JumpPower
      end
   end,
})

-- Infinite Jump
local InfiniteJump = false
PlayerTab:CreateToggle({
   Name = "üöÄ Infinite Jump",
   CurrentValue = false,
   Flag = "InfiniteJump",
   Callback = function(Value)
      InfiniteJump = Value
   end,
})

-- Infinite Jump Logic
UserInputService.JumpRequest:Connect(function()
   if InfiniteJump and Character and Character:FindFirstChild("Humanoid") then
      Character.Humanoid:ChangeState("Jumping")
   end
end)

-- No Clip Toggle
local NoClip = false
PlayerTab:CreateToggle({
   Name = "üëª No Clip",
   CurrentValue = false,
   Flag = "NoClip",
   Callback = function(Value)
      NoClip = Value
   end,
})

-- No Clip Logic
RunService.Stepped:Connect(function()
   if NoClip and Character then
      for _, part in pairs(Character:GetDescendants()) do
         if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
         end
      end
   end
end)

-- Teleports Section
local TeleportSection = TeleportTab:CreateSection("Quick Teleports")

-- Common teleport locations for Brainrot
local teleportLocations = {
   ["Spawn"] = Vector3.new(0, 5, 0),
   ["Shop"] = Vector3.new(50, 5, 0),
   ["Upgrade Area"] = Vector3.new(-50, 5, 0),
   ["Rebirth Zone"] = Vector3.new(0, 5, 50),
   ["VIP Area"] = Vector3.new(100, 5, 100)
}

for locationName, position in pairs(teleportLocations) do
   TeleportTab:CreateButton({
      Name = "üìç " .. locationName,
      Callback = function()
         if Character and Character:FindFirstChild("HumanoidRootPart") then
            Character.HumanoidRootPart.CFrame = CFrame.new(position)
         end
      end,
   })
end

-- Miscellaneous Section
local MiscSection = MiscTab:CreateSection("Miscellaneous")

-- Anti AFK
MiscTab:CreateToggle({
   Name = "üîÑ Anti AFK",
   CurrentValue = false,
   Flag = "AntiAFK",
   Callback = function(Value)
      if Value then
         local VirtualUser = game:GetService("VirtualUser")
         game:GetService("Players").LocalPlayer.Idled:Connect(function()
            VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
         end)
      end
   end,
})

-- Auto Rejoin
MiscTab:CreateButton({
   Name = "üîÑ Auto Rejoin Server",
   Callback = function()
      game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
   end,
})

-- Reset Character
MiscTab:CreateButton({
   Name = "üíÄ Reset Character",
   Callback = function()
      LocalPlayer.Character.Humanoid.Health = 0
   end,
})

-- ESP for Items
local ESP = false
MiscTab:CreateToggle({
   Name = "üëÅÔ∏è Item ESP",
   CurrentValue = false,
   Flag = "ItemESP",
   Callback = function(Value)
      ESP = Value
      if not ESP then
         for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("BillboardGui") and v.Name == "ESP" then
               v:Destroy()
            end
         end
      else
         spawn(function()
            while ESP do
               wait(1)
               for _, v in pairs(workspace:GetDescendants()) do
                  if v.Name:lower():find("coin") or v.Name:lower():find("money") or v.Name:lower():find("cash") then
                     if v:IsA("BasePart") and not v:FindFirstChild("ESP") then
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "ESP"
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.StudsOffset = Vector3.new(0, 2, 0)
                        billboard.Parent = v
                        
                        local label = Instance.new("TextLabel")
                        label.Size = UDim2.new(1, 0, 1, 0)
                        label.BackgroundTransparency = 1
                        label.Text = v.Name
                        label.TextColor3 = Color3.new(0, 1, 0)
                        label.TextScaled = true
                        label.Font = Enum.Font.SourceSansBold
                        label.Parent = billboard
                     end
                  end
               end
            end
         end)
      end
   end,
})

-- Server Hop
MiscTab:CreateButton({
   Name = "üåê Server Hop",
   Callback = function()
      local Http = game:GetService("HttpService")
      local TPS = game:GetService("TeleportService")
      local Api = "https://games.roblox.com/v1/games/"
      
      local _place = game.PlaceId
      local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
      
      function ListServers(cursor)
         local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
         return Http:JSONDecode(Raw)
      end
      
      local Server, Next; repeat
         local Servers = ListServers(Next)
         Server = Servers.data[1]
         Next = Servers.nextPageCursor
      until Server
      
      TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
   end,
})

-- Character respawn handler
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
   Character = newCharacter
   Humanoid = Character:WaitForChild("Humanoid")
   
   -- Reapply settings
   if WalkSpeed ~= 16 then
      Humanoid.WalkSpeed = WalkSpeed
   end
   if JumpPower ~= 50 then
      Humanoid.JumpPower = JumpPower
   end
end)

-- Final notification
Rayfield:Notify({
   Title = "Neon Hub Loaded!",
   Content = "Brainrot script by XzgyX is ready to use!",
   Duration = 6.5,
   Image = 4483362458,
   Actions = {
      Ignore = {
         Name = "Okay!",
         Callback = function()
            print("Script loaded successfully!")
         end
      },
   },
})

print("Neon Hub | Brainrot Script Loaded Successfully!")
print("Made by XzgyX")
