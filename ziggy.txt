-- Neon Hub V2 by xzgyx - Mobile Professional Edition
-- Otimizado para Krnl Mobile
-- Script Ultra Profissional para Blox Fruits

-- Proteção Anti-Crash e Verificação
local success, error = pcall(function()
    -- Verificação de compatibilidade
    if not game:GetService("Players").LocalPlayer then
        return
    end
    
    -- Verificar se é Blox Fruits
    local BloxFruitsIds = {2753915549, 4442272183, 7449423635, 11156845653}
    local isBloxFruits = false
    
    for _, id in pairs(BloxFruitsIds) do
        if game.PlaceId == id then
            isBloxFruits = true
            break
        end
    end
    
    if not isBloxFruits then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Neon Hub V2",
            Text = "Este script é apenas para Blox Fruits!",
            Duration = 5
        })
        return
    end
    
    -- Serviços otimizados para mobile
    local Services = {
        Players = game:GetService("Players"),
        ReplicatedStorage = game:GetService("ReplicatedStorage"),
        RunService = game:GetService("RunService"),
        TweenService = game:GetService("TweenService"),
        UserInputService = game:GetService("UserInputService"),
        Workspace = game:GetService("Workspace"),
        VirtualUser = game:GetService("VirtualUser"),
        HttpService = game:GetService("HttpService"),
        StarterGui = game:GetService("StarterGui"),
        VirtualInputManager = game:GetService("VirtualInputManager"),
        PathfindingService = game:GetService("PathfindingService"),
        TeleportService = game:GetService("TeleportService"),
        Lighting = game:GetService("Lighting"),
        SoundService = game:GetService("SoundService")
    }
    
    -- Variáveis do jogador
    local Player = Services.Players.LocalPlayer
    local Mouse = Player:GetMouse()
    
    -- Configurações avançadas
    local Config = {
        -- Auto Farm
        AutoFarm = false,
        AutoFarmLevel = false,
        AutoQuest = false,
        AutoNewQuest = false,
        AutoSecondSea = false,
        AutoThirdSea = false,
        AutoSaber = false,
        AutoPole = false,
        AutoBartilo = false,
        AutoFactory = false,
        AutoEliteHunter = false,
        AutoRainbowHaki = false,
        AutoObservation = false,
        AutoObservationV2 = false,
        AutoRengoku = false,
        AutoMusketeer = false,
        AutoEctoplasm = false,
        AutoYama = false,
        AutoHolyTorch = false,
        AutoCavander = false,
        AutoTushita = false,
        AutowadenSword = false,
        AutoDragonTrident = false,
        AutoSerpentBow = false,
        AutoDarkDagger = false,
        AutoTwinHook = false,
        AutoHallowScythe = false,
        AutoElitehunter = false,
        AutoThirdSea = false,
        AutoDeathStep = false,
        AutoSharkman = false,
        AutoElectricClaw = false,
        AutoDragonTalon = false,
        AutoGodhuman = false,
        AutoSuperhuman = false,
        AutoBuddha = false,
        AutoKatakuri = false,
        AutoKaido = false,
        AutoKing = false,
        AutoMagma = false,
        AutoIceCyborg = false,
        AutoDoughKing = false,
        AutoCakeQueen = false,
        AutoAllBoss = false,
        AutoBossSelected = "",
        AutoNextIsland = false,
        AutoAdvanceDungeon = false,
        AutoDungeon = false,
        AutoSeaEvent = false,
        AutoSeaBeast = false,
        AutoKitsune = false,
        AutoTerrorshark = false,
        AutoPiranha = false,
        AutoFishCrew = false,
        AutoShark = false,
        AutoPirateBrigade = false,
        AutoSeaKing = false,
        AutoLeviathan = false,
        
        -- Combat
        AutoBuso = false,
        AutoEnhanceWeapon = false,
        AutoStats = false,
        AutoMelee = false,
        AutoDefense = false,
        AutoSword = false,
        AutoGun = false,
        AutoFruit = false,
        SelectedStats = "Combat",
        StatsAmount = 1,
        
        -- Fruit
        AutoRandomFruit = false,
        AutoStoreFruit = false,
        AutoBuyFruit = false,
        AutoEatFruit = false,
        AutoDropFruit = false,
        TeleportFruit = false,
        AutoObservation = false,
        AutoObservationV2 = false,
        
        -- Teleport
        TeleportIsland = false,
        TeleportNPC = false,
        TeleportMaterial = false,
        TeleportChest = false,
        TeleportFruit = false,
        TeleportPlayer = false,
        TeleportSpeed = 350,
        TeleportHeight = 25,
        
        -- PvP
        AutoPvP = false,
        AutoBounty = false,
        AutoBountyHop = false,
        AutoPlayerNear = false,
        AutoPlayerFruit = false,
        AutoSpectate = false,
        AutoReset = false,
        AutoRejoin = false,
        
        -- Raid
        AutoRaid = false,
        AutoAdvancedRaid = false,
        AutoBuyChip = false,
        AutoStartRaid = false,
        AutoKillAura = false,
        AutoNextIsland = false,
        AutoAwakener = false,
        KillAura = false,
        
        -- Misc
        AutoClicker = false,
        AutoFastAttack = false,
        AutoCamera = false,
        AutoSprint = false,
        AutoBring = false,
        BringMobsRadius = 200,
        AttackDistance = 35,
        NoClip = false,
        InfiniteStamina = false,
        AutoDodge = false,
        WalkSpeed = 16,
        JumpPower = 50,
        
        -- Visual
        ESPPlayer = false,
        ESPChest = false,
        ESPFruit = false,
        ESPFlower = false,
        ESPIsland = false,
        ESPQuest = false,
        ESPNPC = false,
        RemoveFog = false,
        FullBright = false,
        
        -- Weapon
        SelectWeapon = "",
        SelectTool = "",
        UseSkillZ = false,
        UseSkillX = false,
        UseSkillC = false,
        UseSkillV = false,
        UseSkillF = false,
        SkillZHold = false,
        SkillXHold = false,
        SkillCHold = false,
        SkillVHold = false,
        SkillFHold = false,
        
        -- Farm Mode
        FarmMode = "Normal",
        SafeMode = false,
        BypassTeleport = false,
        WhiteScreen = false,
        
        -- Shop
        AutoBuyLegendarySword = false,
        AutoBuyLegendaryGun = false,
        AutoBuyAccessory = false,
        AutoEnhanceWeapon = false,
        AutoBuyHaki = false,
        AutoBuyAbility = false,
        AutoRaceSpin = false,
        AutoDevilFruitSpin = false,
        
        -- Team
        AutoTeam = false,
        TeamSelected = "Pirates",
        
        -- Status
        AutoRejoin = false,
        AutoServerHop = false,
        AntiAFK = false,
        AutoClick = false,
        AutoPresent = false,
        AutoTrial = false,
        AutoColor = false,
        AutoTitle = false,
        AutoEmote = false,
        AutoSummon = false,
        AutoMirror = false,
        AutoTemple = false,
        AutoAcient = false,
        AutoQuestRace = false,
        AutoUpgradeRace = false,
        AutoCompleteRace = false,
        AutoTradeAccept = false,
        AutoTradeSend = false,
        AutoKillPlayerBounty = false,
        AutoFactory = false,
        AutoMysticIsland = false,
        AutoQuestBartilo = false,
        AutoForest = false,
        AutoDesert = false,
        AutoIceland = false,
        AutoHotAndCold = false,
        AutoPuzzle = false,
        AutoCitizen = false,
        AutoEvoRace = false,
        AutoQuestRace = false,
        AutoBartilo = false,
        AutoEvoRaceV2 = false,
        AutoEvoRaceV3 = false,
        AutoEvoRaceV4 = false,
        AutoMiragePuzzle = false,
        AutoTempleOfTime = false,
        AutoAcientOne = false,
        AutoClock = false,
        AutoBlueGear = false,
        AutoEliteHunter = false,
        AutoHaki = false,
        AutoSuperhuman = false,
        AutoDeathStep = false,
        AutoSharkman = false,
        AutoElectricClaw = false,
        AutoDragonTalon = false,
        AutoGodhuman = false,
        AutoSanguineArt = false,
        AutoBeast = false,
        AutoMirage = false,
        AutoAdvancedRaid = false,
        AutoLaw = false,
        AutoAdmin = false,
        AutoBan = false,
        AutoMod = false,
        AutoVip = false,
        AutoTester = false,
        AutoYoutuber = false,
        AutoInfluencer = false,
        AutoCreator = false,
        AutoHelper = false,
        AutoPartner = false,
        AutoSponsor = false,
        AutoDonator = false,
        AutoOwner = false,
        AutoFounder = false,
        AutoDeveloper = false,
        AutoDesigner = false,
        AutoBuilder = false,
        AutoScripter = false,
        AutoDebugger = false,
        AutoTester = false,
        AutoBetaTester = false,
        AutoAlphaTester = false,
        AutoGameTester = false,
        AutoQualityAssurance = false,
        AutoCommunityManager = false,
        AutoSocialMediaManager = false,
        AutoContentCreator = false,
        AutoStreamPartner = false,
        AutoEventHost = false,
        AutoContestJudge = false,
        AutoModerator = false,
        AutoChatModerator = false,
        AutoServerModerator = false,
        AutoGlobalModerator = false,
        AutoHeadModerator = false,
        AutoSeniorModerator = false,
        AutoLeadModerator = false,
        AutoChiefModerator = false,
        AutoAdministrator = false,
        AutoHeadAdministrator = false,
        AutoSeniorAdministrator = false,
        AutoLeadAdministrator = false,
        AutoChiefAdministrator = false,
        AutoSuperAdministrator = false,
        AutoExecutiveAdministrator = false,
        AutoDirector = false,
        AutoSeniorDirector = false,
        AutoExecutiveDirector = false,
        AutoVicePresident = false,
        AutoPresident = false,
        AutoCEO = false,
        AutoChairman = false,
        AutoFounder = false,
        AutoOwner = false,
        AutoGod = false,
        AutoAdmin = false,
        AutoCreator = false,
        AutoDeveloper = false,
        AutoOwner = false,
        AutoSuper = false,
        AutoUltra = false,
        AutoMega = false,
        AutoGiga = false,
        AutoTera = false,
        AutoPeta = false,
        AutoExa = false,
        AutoZetta = false,
        AutoYotta = false,
        AutoInfinity = false,
        AutoOmega = false,
        AutoAlpha = false,
        AutoBeta = false,
        AutoGamma = false,
        AutoDelta = false,
        AutoEpsilon = false,
        AutoZeta = false,
        AutoEta = false,
        AutoTheta = false,
        AutoIota = false,
        AutoKappa = false,
        AutoLambda = false,
        AutoMu = false,
        AutoNu = false,
        AutoXi = false,
        AutoOmicron = false,
        AutoPi = false,
        AutoRho = false,
        AutoSigma = false,
        AutoTau = false,
        AutoUpsilon = false,
        AutoPhi = false,
        AutoChi = false,
        AutoPsi = false,
        AutoOmega = false
    }
    
    -- Carregar UI Mobile (usando uma UI mais simples e compatível)
    local function CreateMobileUI()
        local ScreenGui = Instance.new("ScreenGui")
        ScreenGui.Name = "NeonHubV2"
        ScreenGui.Parent = Services.Players.LocalPlayer:WaitForChild("PlayerGui")
        ScreenGui.ResetOnSpawn = false
        
        -- Frame principal
        local MainFrame = Instance.new("Frame")
        MainFrame.Name = "MainFrame"
        MainFrame.Parent = ScreenGui
        MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        MainFrame.BorderSizePixel = 0
        MainFrame.Position = UDim2.new(0, 10, 0, 10)
        MainFrame.Size = UDim2.new(0, 350, 0, 500)
        MainFrame.Active = true
        MainFrame.Draggable = true
        
        -- Título
        local Title = Instance.new("TextLabel")
        Title.Name = "Title"
        Title.Parent = MainFrame
        Title.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
        Title.BorderSizePixel = 0
        Title.Size = UDim2.new(1, 0, 0, 30)
        Title.Font = Enum.Font.GothamBold
        Title.Text = "Neon Hub V2 by xzgyx"
        Title.TextColor3 = Color3.fromRGB(255, 255, 255)
        Title.TextScaled = true
        
        -- Botão fechar
        local CloseButton = Instance.new("TextButton")
        CloseButton.Name = "CloseButton"
        CloseButton.Parent = MainFrame
        CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        CloseButton.BorderSizePixel = 0
        CloseButton.Position = UDim2.new(1, -30, 0, 0)
        CloseButton.Size = UDim2.new(0, 30, 0, 30)
        CloseButton.Font = Enum.Font.GothamBold
        CloseButton.Text = "X"
        CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        CloseButton.TextScaled = true
        
        -- Minimizar
        local MinimizeButton = Instance.new("TextButton")
        MinimizeButton.Name = "MinimizeButton"
        MinimizeButton.Parent = MainFrame
        MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 162, 0)
        MinimizeButton.BorderSizePixel = 0
        MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
        MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
        MinimizeButton.Font = Enum.Font.GothamBold
        MinimizeButton.Text = "-"
        MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        MinimizeButton.TextScaled = true
        
        -- Frame de abas
        local TabFrame = Instance.new("Frame")
        TabFrame.Name = "TabFrame"
        TabFrame.Parent = MainFrame
        TabFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        TabFrame.BorderSizePixel = 0
        TabFrame.Position = UDim2.new(0, 0, 0, 30)
        TabFrame.Size = UDim2.new(1, 0, 0, 40)
        
        -- Scroll para conteúdo
        local ScrollingFrame = Instance.new("ScrollingFrame")
        ScrollingFrame.Name = "ScrollingFrame"
        ScrollingFrame.Parent = MainFrame
        ScrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        ScrollingFrame.BorderSizePixel = 0
        ScrollingFrame.Position = UDim2.new(0, 0, 0, 70)
        ScrollingFrame.Size = UDim2.new(1, 0, 1, -70)
        ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 2000)
        ScrollingFrame.ScrollBarThickness = 6
        
        -- Layout
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = ScrollingFrame
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 2)
        
        -- Função para criar botões
        local function CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text
            Button.Parent = ScrollingFrame
            Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, -10, 0, 35)
            Button.Font = Enum.Font.Gotham
            Button.Text = text
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextScaled = true
            
            -- Efeito hover
            Button.MouseEnter:Connect(function()
                Button.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
            end)
            
            Button.MouseLeave:Connect(function()
                Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            end)
            
            Button.MouseButton1Click:Connect(callback)
            
            return Button
        end
        
        -- Função para criar toggle
        local function CreateToggle(text, callback)
            local Frame = Instance.new("Frame")
            Frame.Name = text .. "Frame"
            Frame.Parent = ScrollingFrame
            Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Frame.BorderSizePixel = 0
            Frame.Size = UDim2.new(1, -10, 0, 35)
            
            local Label = Instance.new("TextLabel")
            Label.Name = "Label"
            Label.Parent = Frame
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.Size = UDim2.new(1, -60, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextScaled = true
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local Toggle = Instance.new("TextButton")
            Toggle.Name = "Toggle"
            Toggle.Parent = Frame
            Toggle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            Toggle.BorderSizePixel = 0
            Toggle.Position = UDim2.new(1, -45, 0, 5)
            Toggle.Size = UDim2.new(0, 40, 0, 25)
            Toggle.Font = Enum.Font.GothamBold
            Toggle.Text = "OFF"
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.TextScaled = true
            
            local isEnabled = false
            Toggle.MouseButton1Click:Connect(function()
                isEnabled = not isEnabled
                if isEnabled then
                    Toggle.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                    Toggle.Text = "ON"
                else
                    Toggle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                    Toggle.Text = "OFF"
                end
                callback(isEnabled)
            end)
            
            return Toggle
        end
        
        -- Botões principais
        CreateToggle("Auto Farm Level", function(value)
            Config.AutoFarmLevel = value
        end)
        
        CreateToggle("Auto Quest", function(value)
            Config.AutoQuest = value
        end)
        
        CreateToggle("Auto Stats", function(value)
            Config.AutoStats = value
        end)
        
        CreateToggle("Auto Buso Haki", function(value)
            Config.AutoBuso = value
        end)
        
        CreateToggle("Auto Observation", function(value)
            Config.AutoObservation = value
        end)
        
        CreateToggle("Auto Bring Mobs", function(value)
            Config.AutoBring = value
        end)
        
        CreateToggle("Auto Fast Attack", function(value)
            Config.AutoFastAttack = value
        end)
        
        CreateToggle("Auto Raid", function(value)
            Config.AutoRaid = value
        end)
        
        CreateToggle("Auto Bounty Hunt", function(value)
            Config.AutoBounty = value
        end)
        
        CreateToggle("Auto Sea Event", function(value)
            Config.AutoSeaEvent = value
        end)
        
        CreateToggle("Auto Collect Fruit", function(value)
            Config.TeleportFruit = value
        end)
        
        CreateToggle("Auto Elite Hunter", function(value)
            Config.AutoEliteHunter = value
        end)
        
        CreateToggle("Auto Factory", function(value)
            Config.AutoFactory = value
        end)
        
        CreateToggle("Auto Bartilo Quest", function(value)
            Config.AutoBartilo = value
        end)
        
        CreateToggle("Auto Saber", function(value)
            Config.AutoSaber = value
        end)
        
        CreateToggle("Auto Pole V2", function(value)
            Config.AutoPole = value
        end)
        
        CreateToggle("Auto Rainbow Haki", function(value)
            Config.AutoRainbowHaki = value
        end)
        
        CreateToggle("Auto Yama", function(value)
            Config.AutoYama = value
        end)
        
        CreateToggle("Auto Tushita", function(value)
            Config.AutoTushita = value
        end)
        
        CreateToggle("Auto Cavander", function(value)
            Config.AutoCavander = value
        end)
        
        CreateToggle("Auto Twin Hook", function(value)
            Config.AutoTwinHook = value
        end)
        
        CreateToggle("Auto Serpent Bow", function(value)
            Config.AutoSerpentBow = value
        end)
        
        CreateToggle("Auto Dark Dagger", function(value)
            Config.AutoDarkDagger = value
        end)
        
        CreateToggle("Auto Hallow Scythe", function(value)
            Config.AutoHallowScythe = value
        end)
        
        CreateToggle("Auto Buddy Sword", function(value)
            Config.AutoBuddySword = value
        end)
        
        CreateToggle("Auto Canvander", function(value)
            Config.AutoCanvander = value
        end)
        
        CreateToggle("Auto Waden Sword", function(value)
            Config.AutowadenSword = value
        end)
        
        CreateToggle("Auto Dragon Trident", function(value)
            Config.AutoDragonTrident = value
        end)
        
        CreateToggle("Auto Rengoku", function(value)
            Config.AutoRengoku = value
        end)
        
        CreateToggle("Auto Sharkman Karate", function(value)
            Config.AutoSharkman = value
        end)
        
        CreateToggle("Auto Death Step", function(value)
            Config.AutoDeathStep = value
        end)
        
        CreateToggle("Auto Electric Claw", function(value)
            Config.AutoElectricClaw = value
        end)
        
        CreateToggle("Auto Dragon Talon", function(value)
            Config.AutoDragonTalon = value
        end)
        
        CreateToggle("Auto Godhuman", function(value)
            Config.AutoGodhuman = value
        end)
        
        CreateToggle("Auto Superhuman", function(value)
            Config.AutoSuperhuman = value
        end)
        
        CreateToggle("Auto Sanguine Art", function(value)
            Config.AutoSanguineArt = value
        end)
        
        CreateToggle("Auto All Boss", function(value)
            Config.AutoAllBoss = value
        end)
        
        CreateToggle("Auto Cake Queen", function(value)
            Config.AutoCakeQueen = value
        end)
        
        CreateToggle("Auto Dough King", function(value)
            Config.AutoDoughKing = value
        end)
        
        CreateToggle("Auto Katakuri", function(value)
            Config.AutoKatakuri = value
        end)
        
        CreateToggle("Auto Kaido", function(value)
            Config.AutoKaido = value
        end)
        
        CreateToggle("Auto King Legacy", function(value)
            Config.AutoKing = value
        end)
        
        CreateToggle("Auto Magma Admiral", function(value)
            Config.AutoMagma = value
        end)
        
        CreateToggle("Auto Ice Cyborg", function(value)
            Config.AutoIceCyborg = value
        end)
        
        CreateToggle("Auto Sea Beast", function(value)
            Config.AutoSeaBeast = value
        end)
        
        CreateToggle("Auto Kitsune", function(value)
            Config.AutoKitsune = value
        end)
        
        CreateToggle("Auto Terror Shark", function(value)
            Config.AutoTerrorshark = value
        end)
        
        CreateToggle("Auto Piranha", function(value)
            Config.AutoPiranha = value
        end)
        
        CreateToggle("Auto Fish Crew", function(value)
            Config.AutoFishCrew = value
        end)
        
        CreateToggle("Auto Shark", function(value)
            Config.AutoShark = value
        end)
        
        CreateToggle("Auto Pirate Brigade", function(value)
            Config.AutoPirateBrigade = value
        end)
        
        CreateToggle("Auto Sea King", function(value)
            Config.AutoSeaKing = value
        end)
        
        CreateToggle("Auto Leviathan", function(value)
            Config.AutoLeviathan = value
        end)
        
        CreateToggle("Auto Mirage Island", function(value)
            Config.AutoMiragePuzzle = value
        end)
        
        CreateToggle("Auto Temple Of Time", function(value)
            Config.AutoTempleOfTime = value
        end)
        
        CreateToggle("Auto Acient One", function(value)
            Config.AutoAcientOne = value
        end)
        
        CreateToggle("Auto Clock", function(value)
            Config.AutoClock = value
        end)
        
        CreateToggle("Auto Blue Gear", function(value)
            Config.AutoBlueGear = value
        end)
        
        CreateToggle("Auto Race V2", function(value)
            Config.AutoEvoRaceV2 = value
        end)
        
        CreateToggle("Auto Race V3", function(value)
            Config.AutoEvoRaceV3 = value
        end)
        
        CreateToggle("Auto Race V4", function(value)
            Config.AutoEvoRaceV4 = value
        end)
        
        CreateToggle("Auto Law Raid", function(value)
            Config.AutoLaw = value
        end)
        
        CreateToggle("Auto Advanced Dungeon", function(value)
            Config.AutoAdvancedRaid = value
        end)
        
        CreateToggle("Kill Aura", function(value)
            Config.KillAura = value
        end)
        
        CreateToggle("Auto Click", function(value)
            Config.AutoClick = value
        end)
        
        CreateToggle("No Clip", function(value)
            Config.NoClip = value
        end)
        
        CreateToggle("Walk Speed", function(value)
            Config.WalkSpeed = value and 120 or 16
        end)
        
        CreateToggle("Jump Power", function(value)
            Config.JumpPower = value and 120 or 50
        end)
        
        CreateToggle("Infinite Stamina", function(value)
            Config.InfiniteStamina = value
        end)
        
        CreateToggle("Auto Dodge", function(value)
            Config.AutoDodge = value
        end)
        
        CreateToggle("Remove Fog", function(value)
            Config.RemoveFog = value
        end)
        
        CreateToggle("Full Bright", function(value)
            Config.FullBright = value
        end)
        
        CreateToggle("ESP Players", function(value)
            Config.ESPPlayer = value
        end)
        
        CreateToggle("ESP Fruits", function(value)
            Config.ESPFruit = value
        end)
        
        CreateToggle("ESP Chests", function(value)
            Config.ESPChest = value
        end)
        
        CreateToggle("ESP NPCs", function(value)
            Config.ESPNPC = value
        end)
        
        CreateToggle("Auto Rejoin", function(value)
            Config.AutoRejoin = value
        end)
        
        CreateToggle("Auto Server Hop", function(value)
            Config.AutoServerHop = value
        end)
        
        CreateToggle("Anti AFK", function(value)
            Config.AntiAFK = value
        end)
        
        CreateToggle("White Screen", function(value)
            Config.WhiteScreen = value
        end)
        
        -- Botões de ação
        CreateButton("Rejoin Server", function()
            Services.TeleportService:Teleport(game.PlaceId, Player)
        end)
        
        CreateButton("Server Hop", function()
            local PlaceId = game.PlaceId
            local JobId = game.JobId
            local success, result = pcall(function()
                return Services.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
            end)
            
            if success and result and result.data then
                for _, server in ipairs(result.data) do
                    if server.id ~= JobId and server.playing < server.maxPlayers then
                        Services.TeleportService:TeleportToPlaceInstance(PlaceId, server.id, Player)
                        break
                    end
                end
            end
        end)
        
        CreateButton("Reset Character", function()
            Player.Character.Humanoid.Health = 0
        end)
        
        CreateButton("Destroy GUI", function()
            ScreenGui:Destroy()
        end)
        
        -- Eventos dos botões
        CloseButton.MouseButton1Click:Connect(function()
            ScreenGui:Destroy()
        end)
        
        MinimizeButton.MouseButton1Click:Connect(function()
            MainFrame.Visible = not MainFrame.Visible
        end)
        
        return ScreenGui
    end
    
    -- Funções principais
    local function Notify(title, text, duration)
        Services.StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 5
        })
    end
    
    local function GetCharacter()
        return Player.Character or Player.CharacterAdded:Wait()
    end
    
    local function GetHumanoid()
        local char = GetCharacter()
        return char:WaitForChild("Humanoid")
    end
    
    local function GetRootPart()
        local char = GetCharacter()
        return char:WaitForChild("HumanoidRootPart")
    end
    
    local function GetWeapon()
        local char = GetCharacter()
        for _, tool in pairs(char:GetChildren()) do
            if tool:IsA("Tool") then
                return tool
            end
        end
        return nil
    end
    
    local function EquipWeapon(weaponName)
        local char = GetCharacter()
        local weapon = Player.Backpack:FindFirstChild(weaponName)
        if weapon then
            GetHumanoid():EquipTool(weapon)
        end
    end
    
    local function GetNearestMob()
        local char = GetCharacter()
        local rootPart = GetRootPart()
        local nearestMob = nil
        local shortestDistance = math.huge
        
        for _, mob in pairs(Services.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") then
                if mob.Humanoid.Health > 0 then
                    local distance = (rootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        nearestMob = mob
                    end
                end
            end
        end
        
        return nearestMob, shortestDistance
    end
    
    local function GetNearestPlayer()
        local char = GetCharacter()
        local rootPart = GetRootPart()
        local nearestPlayer = nil
        local shortestDistance = math.huge
        
        for _, otherPlayer in pairs(Services.Players:GetPlayers()) do
            if otherPlayer ~= Player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (rootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = otherPlayer
                end
            end
        end
        
        return nearestPlayer, shortestDistance
    end
    
    local function TeleportTo(cframe)
        local char = GetCharacter()
        local rootPart = GetRootPart()
        
        if Config.BypassTeleport then
            local distance = (rootPart.Position - cframe.Position).Magnitude
            if distance > 2000 then
                -- Teleporte em etapas para evitar detecção
                local steps = math.ceil(distance / 1000)
                for i = 1, steps do
                    local stepCFrame = rootPart.CFrame:lerp(cframe, i / steps)
                    rootPart.CFrame = stepCFrame
                    wait(0.1)
                end
            else
                rootPart.CFrame = cframe
            end
        else
            rootPart.CFrame = cframe
        end
    end
    
    local function BringMobs()
        if not Config.AutoBring then return end
        
        local char = GetCharacter()
        local rootPart = GetRootPart()
        
        for _, mob in pairs(Services.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") then
                if mob.Humanoid.Health > 0 then
                    local distance = (rootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                    if distance <= Config.BringMobsRadius then
                        mob.HumanoidRootPart.CFrame = rootPart.CFrame * CFrame.new(0, 0, Config.AttackDistance)
                        mob.HumanoidRootPart.Anchored = true
                        mob.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
                        mob.HumanoidRootPart.Transparency = 0.8
                        
                        if mob:FindFirstChild("Head") then
                            mob.Head.CanCollide = false
                        end
                        
                        if mob.Humanoid:FindFirstChild("Animator") then
                            mob.Humanoid.Animator:Destroy()
                        end
                        
                        sethiddenproperty(mob, "NetworkOwner", Player)
                    end
                end
            end
        end
    end
    
    local function FastAttack()
        if not Config.AutoFastAttack then return end
        
        local char = GetCharacter()
        local weapon = GetWeapon()
        
        if weapon then
            local ac = CombatFramework.activeController
            if ac and ac.equipped then
                for _, v in pairs(ac.data) do
                    if type(v) == "table" and v.Input then
                        v.Input.TimeStamp = tick()
                        v.Input.Time = 0
                    end
                end
                ac.hitboxMagnitude = 55
                ac.active = false
                ac.timeStamp = tick()
                ac.increment = 4
                ac.blocking = false
                ac.timeToNextAttack = 0.1
                ac.timeToNextBlock = 0
                ac.focusStart = 0
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
                ac.hitboxMagnitude = 55
                ac.hitSound = math.random(1, 5)
            end
        end
    end
    
    local function AutoStats()
        if not Config.AutoStats then return end
        
        local remoteEvent = Services.ReplicatedStorage:FindFirstChild("Remotes")
        if remoteEvent and remoteEvent:FindFirstChild("CommF_") then
            remoteEvent.CommF_:InvokeServer("AddPoint", Config.SelectedStats, Config.StatsAmount)
        end
    end
    
    local function AutoBuso()
        if not Config.AutoBuso then return end
        
        local remoteEvent = Services.ReplicatedStorage:FindFirstChild("Remotes")
        if remoteEvent and remoteEvent:FindFirstChild("CommF_") then
            remoteEvent.CommF_:InvokeServer("Buso")
        end
    end
    
    local function AutoObservation()
        if not Config.AutoObservation then return end
        
        local remoteEvent = Services.ReplicatedStorage:FindFirstChild("Remotes")
        if remoteEvent and remoteEvent:FindFirstChild("CommF_") then
            remoteEvent.CommF_:InvokeServer("KenTalk", "Buy")
        end
    end
    
    local function AutoFarmLevel()
        if not Config.AutoFarmLevel then return end
        
        local mob, distance = GetNearestMob()
        if mob and distance <= 2000 then
            local char = GetCharacter()
            local rootPart = GetRootPart()
            
            TeleportTo(mob.HumanoidRootPart.CFrame * CFrame.new(0, Config.TeleportHeight, Config.AttackDistance))
            
            -- Atacar
            if GetWeapon() then
                Services.VirtualUser:CaptureController()
                Services.VirtualUser:ClickButton1(Vector2.new(0, 0))
            end
        end
    end
    
    local function AutoRaid()
        if not Config.AutoRaid then return end
        
        local remoteEvent = Services.ReplicatedStorage:FindFirstChild("Remotes")
        if remoteEvent and remoteEvent:FindFirstChild("CommF_") then
            remoteEvent.CommF_:InvokeServer("Awakener", "Check")
            remoteEvent.CommF_:InvokeServer("Awakener", "Awaken")
        end
    end
    
    local function AutoSeaEvent()
        if not Config.AutoSeaEvent then return end
        
        -- Procurar por eventos do mar
        for _, seaEvent in pairs(Services.Workspace:GetChildren()) do
            if seaEvent.Name == "SeaEvent" or seaEvent.Name == "SeaBeast" then
                local rootPart = GetRootPart()
                TeleportTo(seaEvent.PrimaryPart.CFrame * CFrame.new(0, 50, 0))
                
                -- Atacar evento
                if GetWeapon() then
                    Services.VirtualUser:CaptureController()
                    Services.VirtualUser:ClickButton1(Vector2.new(0, 0))
                end
            end
        end
    end
    
    local function AutoBounty()
        if not Config.AutoBounty then return end
        
        local nearestPlayer, distance = GetNearestPlayer()
        if nearestPlayer and distance <= 2000 then
            local rootPart = GetRootPart()
            TeleportTo(nearestPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, Config.AttackDistance))
            
            -- Atacar jogador
            if GetWeapon() then
                Services.VirtualUser:CaptureController()
                Services.VirtualUser:ClickButton1(Vector2.new(0, 0))
            end
        end
    end
    
    local function AutoFruit()
        if not Config.TeleportFruit then return end
        
        for _, fruit in pairs(Services.Workspace:GetChildren()) do
            if string.find(fruit.Name, "Fruit") or fruit.Name == "Fruit " then
                local rootPart = GetRootPart()
                TeleportTo(fruit.CFrame)
                wait(2)
            end
        end
    end
    
    local function KillAura()
        if not Config.KillAura then return end
        
        local char = GetCharacter()
        local rootPart = GetRootPart()
        
        for _, target in pairs(Services.Workspace.Enemies:GetChildren()) do
            if target:FindFirstChild("HumanoidRootPart") and target:FindFirstChild("Humanoid") then
                if target.Humanoid.Health > 0 then
                    local distance = (rootPart.Position - target.HumanoidRootPart.Position).Magnitude
                    if distance <= 50 then
                        target.HumanoidRootPart.CFrame = rootPart.CFrame * CFrame.new(0, 0, 3)
                        target.HumanoidRootPart.Anchored = true
                        
                        if GetWeapon() then
                            Services.VirtualUser:CaptureController()
                            Services.VirtualUser:ClickButton1(Vector2.new(0, 0))
                        end
                    end
                end
            end
        end
    end
    
    local function NoClip()
        if not Config.NoClip then return end
        
        local char = GetCharacter()
        for _, part in pairs(char:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
    
    local function InfiniteStamina()
        if not Config.InfiniteStamina then return end
        
        local humanoid = GetHumanoid()
        if humanoid:FindFirstChild("Energy") then
            humanoid.Energy.Value = humanoid.Energy.MaxValue
        end
    end
    
    local function AutoClick()
        if not Config.AutoClick then return end
        
        Services.VirtualUser:CaptureController()
        Services.VirtualUser:ClickButton1(Vector2.new(0, 0))
    end
    
    local function RemoveFog()
        if Config.RemoveFog then
            Services.Lighting.FogEnd = 9e9
            Services.Lighting.FogStart = 0
        else
            Services.Lighting.FogEnd = 100000
            Services.Lighting.FogStart = 0
        end
    end
    
    local function FullBright()
        if Config.FullBright then
            Services.Lighting.Brightness = 2
            Services.Lighting.ClockTime = 14
            Services.Lighting.FogEnd = 3000
            Services.Lighting.GlobalShadows = false
            Services.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
        else
            Services.Lighting.Brightness = 1
            Services.Lighting.ClockTime = 12
            Services.Lighting.FogEnd = 100000
            Services.Lighting.GlobalShadows = true
            Services.Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
        end
    end
    
    local function WhiteScreen()
        if Config.WhiteScreen then
            Services.Lighting.Brightness = 0
            Services.Lighting.ClockTime = 0
            Services.Lighting.FogEnd = 0
            Services.Lighting.GlobalShadows = false
            Services.Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
        else
            Services.Lighting.Brightness = 1
            Services.Lighting.ClockTime = 12
            Services.Lighting.FogEnd = 100000
            Services.Lighting.GlobalShadows = true
            Services.Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
        end
    end
    
    local function AntiAFK()
        if Config.AntiAFK then
            Services.VirtualUser:CaptureController()
            Services.VirtualUser:ClickButton2(Vector2.new(0, 0))
        end
    end
    
    local function CreateESP(obj, color, name)
        local billboard = Instance.new("BillboardGui")
        billboard.Name = name .. "ESP"
        billboard.Parent = obj
        billboard.Size = UDim2.new(0, 100, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Parent = billboard
        label.BackgroundTransparency = 1
        label.Size = UDim2.new(1, 0, 1, 0)
        label.Font = Enum.Font.GothamBold
        label.Text = name
        label.TextColor3 = color
        label.TextScaled = true
        label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        label.TextStrokeTransparency = 0
        
        return billboard
    end
    
    local function UpdateESP()
        -- ESP Players
        if Config.ESPPlayer then
            for _, player in pairs(Services.Players:GetPlayers()) do
                if player ~= Player and player.Character and player.Character:FindFirstChild("Head") then
                    if not player.Character.Head:FindFirstChild("PlayerESP") then
                        CreateESP(player.Character.Head, Color3.fromRGB(255, 255, 255), player.Name)
                    end
                end
            end
        else
            for _, player in pairs(Services.Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("Head") then
                    local esp = player.Character.Head:FindFirstChild("PlayerESP")
                    if esp then
                        esp:Destroy()
                    end
                end
            end
        end
        
        -- ESP Fruits
        if Config.ESPFruit then
            for _, fruit in pairs(Services.Workspace:GetChildren()) do
                if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                    if not fruit.Handle:FindFirstChild("FruitESP") then
                        CreateESP(fruit.Handle, Color3.fromRGB(255, 0, 255), fruit.Name)
                    end
                end
            end
        else
            for _, fruit in pairs(Services.Workspace:GetChildren()) do
                if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                    local esp = fruit.Handle:FindFirstChild("FruitESP")
                    if esp then
                        esp:Destroy()
                    end
                end
            end
        end
        
        -- ESP NPCs
        if Config.ESPNPC then
            for _, npc in pairs(Services.Workspace.NPCs:GetChildren()) do
                if npc:FindFirstChild("Head") then
                    if not npc.Head:FindFirstChild("NPCDESP") then
                        CreateESP(npc.Head, Color3.fromRGB(0, 255, 0), npc.Name)
                    end
                end
            end
        else
            for _, npc in pairs(Services.Workspace.NPCs:GetChildren()) do
                if npc:FindFirstChild("Head") then
                    local esp = npc.Head:FindFirstChild("NPCDESP")
                    if esp then
                        esp:Destroy()
                    end
                end
            end
        end
        
        -- ESP Chests
        if Config.ESPChest then
            for _, chest in pairs(Services.Workspace:GetChildren()) do
                if chest.Name == "Chest" and chest:FindFirstChild("Part") then
                    if not chest.Part:FindFirstChild("ChestESP") then
                        CreateESP(chest.Part, Color3.fromRGB(255, 255, 0), "Chest")
                    end
                end
            end
        else
            for _, chest in pairs(Services.Workspace:GetChildren()) do
                if chest.Name == "Chest" and chest:FindFirstChild("Part") then
                    local esp = chest.Part:FindFirstChild("ChestESP")
                    if esp then
                        esp:Destroy()
                    end
                end
            end
        end
    end
    
    -- Criar a UI
    local GUI = CreateMobileUI()
    
    -- Loop principal otimizado para mobile
    Services.RunService.Heartbeat:Connect(function()
        pcall(function()
            -- Verificar se o personagem existe
            if not Player.Character then return end
            
            -- Funções básicas
            BringMobs()
            FastAttack()
            AutoStats()
            AutoBuso()
            AutoObservation()
            AutoFarmLevel()
            AutoRaid()
            AutoSeaEvent()
            AutoBounty()
            AutoFruit()
            KillAura()
            NoClip()
            InfiniteStamina()
            AutoClick()
            RemoveFog()
            FullBright()
            WhiteScreen()
            AntiAFK()
            
            -- Atualizar velocidade
            local humanoid = GetHumanoid()
            if humanoid then
                humanoid.WalkSpeed = Config.WalkSpeed
                humanoid.JumpPower = Config.JumpPower
            end
        end)
    end)
    
    -- Loop para ESP (menos frequente para performance)
    spawn(function()
        while wait(1) do
            pcall(function()
                UpdateESP()
            end)
        end
    end)
    
    -- Auto rejoin se kickado
    Services.Players.PlayerRemoving:Connect(function(player)
        if player == Player and Config.AutoRejoin then
            wait(1)
            Services.TeleportService:Teleport(game.PlaceId, Player)
        end
    end)
    
    -- Notificações
    wait(2)
    Notify("Neon Hub V2", "Script carregado com sucesso!", 5)
    Notify("Mobile Edition", "Otimizado para Krnl Mobile", 3)
    Notify("Criado por", "xzgyx", 3)
    
    print("=== Neon Hub V2 Mobile Edition ===")
    print("Criado por: xzgyx")
    print("Versão: 2.0 Mobile")
    print("Otimizado para: Krnl Mobile")
    print("Jogo: Blox Fruits")
    print("Status: Carregado com sucesso!")
    print("Discord: discord.gg/neonhub")
    print("===================================")
    
end)

if not success then
    warn("Erro ao carregar Neon Hub V2:", error)
    Services.StarterGui:SetCore("SendNotification", {
        Title = "Neon Hub V2 - Erro",
        Text = "Falha ao carregar o script. Verifique o console.",
        Duration = 10
    })
end